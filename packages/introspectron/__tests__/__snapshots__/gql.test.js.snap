// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mutationsDbe 1`] = `
Object {
  "confirmDeleteAccount": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "ConfirmDeleteAccountPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "token": Object {
            "name": "token",
            "type": "String",
          },
          "userId": Object {
            "name": "userId",
            "type": "UUID",
          },
        },
        "type": "ConfirmDeleteAccountInput",
      },
    },
    "qtype": "mutation",
  },
  "createAction": Object {
    "model": "Action",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "action": Object {
            "isNotNull": true,
            "name": "action",
            "properties": Object {
              "activityFeedText": Object {
                "name": "activityFeedText",
                "type": "String",
              },
              "alreadyCompletedActionText": Object {
                "name": "alreadyCompletedActionText",
                "type": "String",
              },
              "approved": Object {
                "name": "approved",
                "type": "Boolean",
              },
              "callToAction": Object {
                "name": "callToAction",
                "type": "String",
              },
              "completedActionText": Object {
                "name": "completedActionText",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "discoveryDescription": Object {
                "name": "discoveryDescription",
                "type": "String",
              },
              "discoveryHeader": Object {
                "name": "discoveryHeader",
                "type": "String",
              },
              "enableNotifications": Object {
                "name": "enableNotifications",
                "type": "Boolean",
              },
              "enableNotificationsText": Object {
                "name": "enableNotificationsText",
                "type": "String",
              },
              "endDate": Object {
                "name": "endDate",
                "type": "Datetime",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrivate": Object {
                "name": "isPrivate",
                "type": "Boolean",
              },
              "isRecurring": Object {
                "name": "isRecurring",
                "type": "Boolean",
              },
              "limitedToLocation": Object {
                "name": "limitedToLocation",
                "type": "Boolean",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationRadius": Object {
                "name": "locationRadius",
                "type": "BigFloat",
              },
              "minimumGroupMembers": Object {
                "name": "minimumGroupMembers",
                "type": "Int",
              },
              "notificationObjectTemplate": Object {
                "name": "notificationObjectTemplate",
                "type": "String",
              },
              "notificationText": Object {
                "name": "notificationText",
                "type": "String",
              },
              "objectTypeId": Object {
                "name": "objectTypeId",
                "type": "Int",
              },
              "oncePerObject": Object {
                "name": "oncePerObject",
                "type": "Boolean",
              },
              "ownerId": Object {
                "isNotNull": true,
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "published": Object {
                "name": "published",
                "type": "Boolean",
              },
              "recurringInterval": Object {
                "name": "recurringInterval",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "rewardAmount": Object {
                "name": "rewardAmount",
                "type": "BigFloat",
              },
              "rewardId": Object {
                "name": "rewardId",
                "type": "UUID",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "selfVerifiable": Object {
                "name": "selfVerifiable",
                "type": "Boolean",
              },
              "shareImage": Object {
                "name": "shareImage",
                "type": "JSON",
              },
              "shareImageUpload": Object {
                "name": "shareImageUpload",
                "type": "Upload",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "startDate": Object {
                "name": "startDate",
                "type": "Datetime",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "title": Object {
                "name": "title",
                "type": "String",
              },
              "titleObjectTemplate": Object {
                "name": "titleObjectTemplate",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
              "verifyRewardId": Object {
                "name": "verifyRewardId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createActionGoal": Object {
    "model": "ActionGoal",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateActionGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionGoal": Object {
            "isNotNull": true,
            "name": "actionGoal",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "goalId": Object {
                "isNotNull": true,
                "name": "goalId",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateActionGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "createActionItem": Object {
    "model": "ActionItem",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionItem": Object {
            "isNotNull": true,
            "name": "actionItem",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "embedCode": Object {
                "name": "embedCode",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isRequired": Object {
                "name": "isRequired",
                "type": "Boolean",
              },
              "itemOrder": Object {
                "name": "itemOrder",
                "type": "Int",
              },
              "itemTypeId": Object {
                "name": "itemTypeId",
                "type": "Int",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationRadius": Object {
                "name": "locationRadius",
                "type": "BigFloat",
              },
              "media": Object {
                "name": "media",
                "type": "JSON",
              },
              "mediaUpload": Object {
                "name": "mediaUpload",
                "type": "Upload",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "notificationText": Object {
                "name": "notificationText",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "rewardWeight": Object {
                "name": "rewardWeight",
                "type": "BigFloat",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
            },
          },
        },
        "type": "CreateActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "createActionItemType": Object {
    "model": "ActionItemType",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateActionItemTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionItemType": Object {
            "isNotNull": true,
            "name": "actionItemType",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "Int",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateActionItemTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "createActionVariation": Object {
    "model": "ActionVariation",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateActionVariationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionVariation": Object {
            "isNotNull": true,
            "name": "actionVariation",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "dob": Object {
                "isArray": true,
                "name": "dob",
                "type": "Date",
              },
              "gender": Object {
                "isArray": true,
                "name": "gender",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "income": Object {
                "isArray": true,
                "name": "income",
                "type": "BigFloat",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "title": Object {
                "name": "title",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateActionVariationInput",
      },
    },
    "qtype": "mutation",
  },
  "createAuthAccount": Object {
    "model": "AuthAccount",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateAuthAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "authAccount": Object {
            "isNotNull": true,
            "name": "authAccount",
            "properties": Object {
              "details": Object {
                "isNotNull": true,
                "name": "details",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "identifier": Object {
                "isNotNull": true,
                "name": "identifier",
                "type": "String",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "service": Object {
                "isNotNull": true,
                "name": "service",
                "type": "String",
              },
            },
          },
        },
        "type": "CreateAuthAccountInput",
      },
    },
    "qtype": "mutation",
  },
  "createConnectedAccount": Object {
    "model": "ConnectedAccount",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateConnectedAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "connectedAccount": Object {
            "isNotNull": true,
            "name": "connectedAccount",
            "properties": Object {
              "details": Object {
                "isNotNull": true,
                "name": "details",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "identifier": Object {
                "isNotNull": true,
                "name": "identifier",
                "type": "String",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "service": Object {
                "isNotNull": true,
                "name": "service",
                "type": "String",
              },
            },
          },
        },
        "type": "CreateConnectedAccountInput",
      },
    },
    "qtype": "mutation",
  },
  "createCryptoAddress": Object {
    "model": "CryptoAddress",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateCryptoAddressPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "cryptoAddress": Object {
            "isNotNull": true,
            "name": "cryptoAddress",
            "properties": Object {
              "address": Object {
                "isNotNull": true,
                "name": "address",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrimary": Object {
                "name": "isPrimary",
                "type": "Boolean",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateCryptoAddressInput",
      },
    },
    "qtype": "mutation",
  },
  "createEmail": Object {
    "model": "Email",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "isNotNull": true,
            "name": "email",
            "properties": Object {
              "email": Object {
                "isNotNull": true,
                "name": "email",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrimary": Object {
                "name": "isPrimary",
                "type": "Boolean",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "createGoal": Object {
    "model": "Goal",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "goal": Object {
            "isNotNull": true,
            "name": "goal",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "icon": Object {
                "name": "icon",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "shortName": Object {
                "name": "shortName",
                "type": "String",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "subHead": Object {
                "name": "subHead",
                "type": "String",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "createGoalExplanation": Object {
    "model": "GoalExplanation",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateGoalExplanationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "goalExplanation": Object {
            "isNotNull": true,
            "name": "goalExplanation",
            "properties": Object {
              "audio": Object {
                "name": "audio",
                "type": "JSON",
              },
              "audioDuration": Object {
                "name": "audioDuration",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "audioUpload": Object {
                "name": "audioUpload",
                "type": "Upload",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "explanation": Object {
                "name": "explanation",
                "type": "String",
              },
              "explanationTitle": Object {
                "name": "explanationTitle",
                "type": "String",
              },
              "goalId": Object {
                "isNotNull": true,
                "name": "goalId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateGoalExplanationInput",
      },
    },
    "qtype": "mutation",
  },
  "createGroup": Object {
    "model": "Group",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateGroupPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "group": Object {
            "isNotNull": true,
            "name": "group",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateGroupInput",
      },
    },
    "qtype": "mutation",
  },
  "createGroupPost": Object {
    "model": "GroupPost",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateGroupPostPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "groupPost": Object {
            "isNotNull": true,
            "name": "groupPost",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "flagged": Object {
                "name": "flagged",
                "type": "Boolean",
              },
              "groupId": Object {
                "isNotNull": true,
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "taggedUserIds": Object {
                "isArray": true,
                "name": "taggedUserIds",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
            },
          },
        },
        "type": "CreateGroupPostInput",
      },
    },
    "qtype": "mutation",
  },
  "createGroupPostComment": Object {
    "model": "GroupPostComment",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateGroupPostCommentPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "groupPostComment": Object {
            "isNotNull": true,
            "name": "groupPostComment",
            "properties": Object {
              "commenterId": Object {
                "name": "commenterId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "parentId": Object {
                "name": "parentId",
                "type": "UUID",
              },
              "postId": Object {
                "isNotNull": true,
                "name": "postId",
                "type": "UUID",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateGroupPostCommentInput",
      },
    },
    "qtype": "mutation",
  },
  "createGroupPostReaction": Object {
    "model": "GroupPostReaction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateGroupPostReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "groupPostReaction": Object {
            "isNotNull": true,
            "name": "groupPostReaction",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "postId": Object {
                "isNotNull": true,
                "name": "postId",
                "type": "UUID",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "reacterId": Object {
                "name": "reacterId",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateGroupPostReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "createLocation": Object {
    "model": "Location",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateLocationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "location": Object {
            "isNotNull": true,
            "name": "location",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationType": Object {
                "isNotNull": true,
                "name": "locationType",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "ownerId": Object {
                "isNotNull": true,
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateLocationInput",
      },
    },
    "qtype": "mutation",
  },
  "createLocationType": Object {
    "model": "LocationType",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateLocationTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "locationType": Object {
            "isNotNull": true,
            "name": "locationType",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateLocationTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "createMessage": Object {
    "model": "Message",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "message": Object {
            "isNotNull": true,
            "name": "message",
            "properties": Object {
              "content": Object {
                "name": "content",
                "type": "JSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "groupId": Object {
                "isNotNull": true,
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "senderId": Object {
                "name": "senderId",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "upload": Object {
                "name": "upload",
                "type": "JSON",
              },
              "uploadUpload": Object {
                "name": "uploadUpload",
                "type": "Upload",
              },
            },
          },
        },
        "type": "CreateMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "createMessageGroup": Object {
    "model": "MessageGroup",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateMessageGroupPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "messageGroup": Object {
            "isNotNull": true,
            "name": "messageGroup",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "memberIds": Object {
                "isArray": true,
                "name": "memberIds",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateMessageGroupInput",
      },
    },
    "qtype": "mutation",
  },
  "createNewsArticle": Object {
    "model": "NewsArticle",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateNewsArticlePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "newsArticle": Object {
            "isNotNull": true,
            "name": "newsArticle",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "link": Object {
                "name": "link",
                "type": "String",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "publishedAt": Object {
                "name": "publishedAt",
                "type": "Datetime",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateNewsArticleInput",
      },
    },
    "qtype": "mutation",
  },
  "createNotification": Object {
    "model": "Notification",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateNotificationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "notification": Object {
            "isNotNull": true,
            "name": "notification",
            "properties": Object {
              "actorId": Object {
                "name": "actorId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "entityType": Object {
                "name": "entityType",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "notificationText": Object {
                "name": "notificationText",
                "type": "String",
              },
              "notificationType": Object {
                "name": "notificationType",
                "type": "String",
              },
              "recipientId": Object {
                "name": "recipientId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateNotificationInput",
      },
    },
    "qtype": "mutation",
  },
  "createNotificationPreference": Object {
    "model": "NotificationPreference",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateNotificationPreferencePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "notificationPreference": Object {
            "isNotNull": true,
            "name": "notificationPreference",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "emails": Object {
                "name": "emails",
                "type": "Boolean",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "notifications": Object {
                "name": "notifications",
                "type": "Boolean",
              },
              "sms": Object {
                "name": "sms",
                "type": "Boolean",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateNotificationPreferenceInput",
      },
    },
    "qtype": "mutation",
  },
  "createObject": Object {
    "model": "Object",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateObjectPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "object": Object {
            "isNotNull": true,
            "name": "object",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "media": Object {
                "name": "media",
                "type": "JSON",
              },
              "mediaUpload": Object {
                "name": "mediaUpload",
                "type": "Upload",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "typeId": Object {
                "isNotNull": true,
                "name": "typeId",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateObjectInput",
      },
    },
    "qtype": "mutation",
  },
  "createObjectAttribute": Object {
    "model": "ObjectAttribute",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateObjectAttributePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "objectAttribute": Object {
            "isNotNull": true,
            "name": "objectAttribute",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "numeric": Object {
                "name": "numeric",
                "type": "BigFloat",
              },
              "objectId": Object {
                "isNotNull": true,
                "name": "objectId",
                "type": "UUID",
              },
              "objectTypeAttributeId": Object {
                "isNotNull": true,
                "name": "objectTypeAttributeId",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "text": Object {
                "name": "text",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "valueId": Object {
                "name": "valueId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateObjectAttributeInput",
      },
    },
    "qtype": "mutation",
  },
  "createObjectType": Object {
    "model": "ObjectType",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateObjectTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "objectType": Object {
            "isNotNull": true,
            "name": "objectType",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "icon": Object {
                "name": "icon",
                "type": "JSON",
              },
              "iconUpload": Object {
                "name": "iconUpload",
                "type": "Upload",
              },
              "id": Object {
                "name": "id",
                "type": "Int",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateObjectTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "createObjectTypeAttribute": Object {
    "model": "ObjectTypeAttribute",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateObjectTypeAttributePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "objectTypeAttribute": Object {
            "isNotNull": true,
            "name": "objectTypeAttribute",
            "properties": Object {
              "attrOrder": Object {
                "name": "attrOrder",
                "type": "Int",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isRequired": Object {
                "name": "isRequired",
                "type": "Boolean",
              },
              "label": Object {
                "name": "label",
                "type": "String",
              },
              "max": Object {
                "name": "max",
                "type": "Int",
              },
              "min": Object {
                "name": "min",
                "type": "Int",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "objectTypeId": Object {
                "isNotNull": true,
                "name": "objectTypeId",
                "type": "Int",
              },
              "pattern": Object {
                "name": "pattern",
                "type": "String",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "unit": Object {
                "name": "unit",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateObjectTypeAttributeInput",
      },
    },
    "qtype": "mutation",
  },
  "createObjectTypeValue": Object {
    "model": "ObjectTypeValue",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateObjectTypeValuePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "objectTypeValue": Object {
            "isNotNull": true,
            "name": "objectTypeValue",
            "properties": Object {
              "attrId": Object {
                "isNotNull": true,
                "name": "attrId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "icon": Object {
                "name": "icon",
                "type": "JSON",
              },
              "iconUpload": Object {
                "name": "iconUpload",
                "type": "Upload",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "numeric": Object {
                "name": "numeric",
                "type": "BigFloat",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "text": Object {
                "name": "text",
                "type": "String",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "valueOrder": Object {
                "name": "valueOrder",
                "type": "Int",
              },
            },
          },
        },
        "type": "CreateObjectTypeValueInput",
      },
    },
    "qtype": "mutation",
  },
  "createOrganizationProfile": Object {
    "model": "OrganizationProfile",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateOrganizationProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "organizationProfile": Object {
            "isNotNull": true,
            "name": "organizationProfile",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "headerImage": Object {
                "name": "headerImage",
                "type": "JSON",
              },
              "headerImageUpload": Object {
                "name": "headerImageUpload",
                "type": "Upload",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "organizationId": Object {
                "isNotNull": true,
                "name": "organizationId",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "reputation": Object {
                "name": "reputation",
                "type": "BigFloat",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "website": Object {
                "name": "website",
                "type": "String",
              },
            },
          },
        },
        "type": "CreateOrganizationProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "createPhoneNumber": Object {
    "model": "PhoneNumber",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreatePhoneNumberPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "phoneNumber": Object {
            "isNotNull": true,
            "name": "phoneNumber",
            "properties": Object {
              "cc": Object {
                "isNotNull": true,
                "name": "cc",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrimary": Object {
                "name": "isPrimary",
                "type": "Boolean",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "number": Object {
                "isNotNull": true,
                "name": "number",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreatePhoneNumberInput",
      },
    },
    "qtype": "mutation",
  },
  "createPost": Object {
    "model": "Post",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreatePostPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "post": Object {
            "isNotNull": true,
            "name": "post",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "flagged": Object {
                "name": "flagged",
                "type": "Boolean",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "taggedUserIds": Object {
                "isArray": true,
                "name": "taggedUserIds",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
            },
          },
        },
        "type": "CreatePostInput",
      },
    },
    "qtype": "mutation",
  },
  "createPostComment": Object {
    "model": "PostComment",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreatePostCommentPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "postComment": Object {
            "isNotNull": true,
            "name": "postComment",
            "properties": Object {
              "commenterId": Object {
                "name": "commenterId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "parentId": Object {
                "name": "parentId",
                "type": "UUID",
              },
              "postId": Object {
                "isNotNull": true,
                "name": "postId",
                "type": "UUID",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreatePostCommentInput",
      },
    },
    "qtype": "mutation",
  },
  "createPostReaction": Object {
    "model": "PostReaction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreatePostReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "postReaction": Object {
            "isNotNull": true,
            "name": "postReaction",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "postId": Object {
                "isNotNull": true,
                "name": "postId",
                "type": "UUID",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "reacterId": Object {
                "name": "reacterId",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreatePostReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "createRequiredAction": Object {
    "model": "RequiredAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateRequiredActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "requiredAction": Object {
            "isNotNull": true,
            "name": "requiredAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "actionOrder": Object {
                "name": "actionOrder",
                "type": "Int",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "requiredId": Object {
                "isNotNull": true,
                "name": "requiredId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateRequiredActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createRewardLimit": Object {
    "model": "RewardLimit",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateRewardLimitPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "rewardLimit": Object {
            "isNotNull": true,
            "name": "rewardLimit",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "dailyLimit": Object {
                "name": "dailyLimit",
                "type": "BigFloat",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "ownerId": Object {
                "isNotNull": true,
                "name": "ownerId",
                "type": "UUID",
              },
              "rewardAmount": Object {
                "name": "rewardAmount",
                "type": "BigFloat",
              },
              "rewardUnit": Object {
                "name": "rewardUnit",
                "type": "String",
              },
              "totalLimit": Object {
                "name": "totalLimit",
                "type": "BigFloat",
              },
              "totalRewardLimit": Object {
                "name": "totalRewardLimit",
                "type": "BigFloat",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userDailyLimit": Object {
                "name": "userDailyLimit",
                "type": "BigFloat",
              },
              "userTotalLimit": Object {
                "name": "userTotalLimit",
                "type": "BigFloat",
              },
              "userWeeklyLimit": Object {
                "name": "userWeeklyLimit",
                "type": "BigFloat",
              },
              "weeklyLimit": Object {
                "name": "weeklyLimit",
                "type": "BigFloat",
              },
            },
          },
        },
        "type": "CreateRewardLimitInput",
      },
    },
    "qtype": "mutation",
  },
  "createRoleType": Object {
    "model": "RoleType",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateRoleTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "roleType": Object {
            "isNotNull": true,
            "name": "roleType",
            "properties": Object {
              "id": Object {
                "isNotNull": true,
                "name": "id",
                "type": "Int",
              },
              "name": Object {
                "isNotNull": true,
                "name": "name",
                "type": "String",
              },
            },
          },
        },
        "type": "CreateRoleTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "createTrack": Object {
    "model": "Track",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateTrackPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "track": Object {
            "isNotNull": true,
            "name": "track",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "icon": Object {
                "name": "icon",
                "type": "JSON",
              },
              "iconUpload": Object {
                "name": "iconUpload",
                "type": "Upload",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isApproved": Object {
                "name": "isApproved",
                "type": "Boolean",
              },
              "isPublished": Object {
                "name": "isPublished",
                "type": "Boolean",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "objectTypeId": Object {
                "name": "objectTypeId",
                "type": "Int",
              },
              "ownerId": Object {
                "isNotNull": true,
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateTrackInput",
      },
    },
    "qtype": "mutation",
  },
  "createTrackAction": Object {
    "model": "TrackAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateTrackActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "trackAction": Object {
            "isNotNull": true,
            "name": "trackAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isRequired": Object {
                "name": "isRequired",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "trackId": Object {
                "isNotNull": true,
                "name": "trackId",
                "type": "UUID",
              },
              "trackOrder": Object {
                "name": "trackOrder",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateTrackActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUser": Object {
    "model": "User",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "user": Object {
            "isNotNull": true,
            "name": "user",
            "properties": Object {
              "displayName": Object {
                "name": "displayName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "searchTsv": Object {
                "name": "searchTsv",
                "type": "FullText",
              },
              "type": Object {
                "name": "type",
                "type": "Int",
              },
              "username": Object {
                "name": "username",
                "type": "String",
              },
            },
          },
        },
        "type": "CreateUserInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserAction": Object {
    "model": "UserAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userAction": Object {
            "isNotNull": true,
            "name": "userAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "actionStarted": Object {
                "name": "actionStarted",
                "type": "Datetime",
              },
              "complete": Object {
                "name": "complete",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "objectId": Object {
                "name": "objectId",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "rejected": Object {
                "name": "rejected",
                "type": "Boolean",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "userRating": Object {
                "name": "userRating",
                "type": "Int",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
              "verifiedDate": Object {
                "name": "verifiedDate",
                "type": "Datetime",
              },
            },
          },
        },
        "type": "CreateUserActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserActionItem": Object {
    "model": "UserActionItem",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userActionItem": Object {
            "isNotNull": true,
            "name": "userActionItem",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "actionItemId": Object {
                "isNotNull": true,
                "name": "actionItemId",
                "type": "UUID",
              },
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "complete": Object {
                "name": "complete",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "media": Object {
                "name": "media",
                "type": "JSON",
              },
              "mediaUpload": Object {
                "name": "mediaUpload",
                "type": "Upload",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "text": Object {
                "name": "text",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "isNotNull": true,
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
            },
          },
        },
        "type": "CreateUserActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserActionItemVerification": Object {
    "model": "UserActionItemVerification",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserActionItemVerificationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userActionItemVerification": Object {
            "isNotNull": true,
            "name": "userActionItemVerification",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "actionItemId": Object {
                "name": "actionItemId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "notes": Object {
                "name": "notes",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "rejected": Object {
                "name": "rejected",
                "type": "Boolean",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "name": "userActionId",
                "type": "UUID",
              },
              "userActionItemId": Object {
                "isNotNull": true,
                "name": "userActionItemId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
              "verifierId": Object {
                "name": "verifierId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserActionItemVerificationInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserActionReaction": Object {
    "model": "UserActionReaction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserActionReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userActionReaction": Object {
            "isNotNull": true,
            "name": "userActionReaction",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "reacterId": Object {
                "name": "reacterId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "isNotNull": true,
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserActionReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserActionVerification": Object {
    "model": "UserActionVerification",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserActionVerificationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userActionVerification": Object {
            "isNotNull": true,
            "name": "userActionVerification",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "notes": Object {
                "name": "notes",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "rejected": Object {
                "name": "rejected",
                "type": "Boolean",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "isNotNull": true,
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
              "verifierId": Object {
                "name": "verifierId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserActionVerificationInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserAnswer": Object {
    "model": "UserAnswer",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserAnswerPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userAnswer": Object {
            "isNotNull": true,
            "name": "userAnswer",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "numeric": Object {
                "name": "numeric",
                "type": "BigFloat",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "questionId": Object {
                "isNotNull": true,
                "name": "questionId",
                "type": "UUID",
              },
              "text": Object {
                "name": "text",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserAnswerInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserCharacteristic": Object {
    "model": "UserCharacteristic",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserCharacteristicPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userCharacteristic": Object {
            "isNotNull": true,
            "name": "userCharacteristic",
            "properties": Object {
              "age": Object {
                "name": "age",
                "type": "Int",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "diyLevel": Object {
                "name": "diyLevel",
                "type": "Int",
              },
              "dob": Object {
                "name": "dob",
                "type": "Date",
              },
              "education": Object {
                "name": "education",
                "type": "String",
              },
              "freeTime": Object {
                "name": "freeTime",
                "type": "Int",
              },
              "gardenerLevel": Object {
                "name": "gardenerLevel",
                "type": "Int",
              },
              "gender": Object {
                "name": "gender",
                "type": "String",
              },
              "homeOwnership": Object {
                "name": "homeOwnership",
                "type": "Int",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "income": Object {
                "name": "income",
                "type": "BigFloat",
              },
              "race": Object {
                "name": "race",
                "type": "String",
              },
              "researchToDoer": Object {
                "name": "researchToDoer",
                "type": "Int",
              },
              "treeHuggerLevel": Object {
                "name": "treeHuggerLevel",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserCharacteristicInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserConnection": Object {
    "model": "UserConnection",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserConnectionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userConnection": Object {
            "isNotNull": true,
            "name": "userConnection",
            "properties": Object {
              "accepted": Object {
                "name": "accepted",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "requesterId": Object {
                "isNotNull": true,
                "name": "requesterId",
                "type": "UUID",
              },
              "responderId": Object {
                "isNotNull": true,
                "name": "responderId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserConnectionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserContact": Object {
    "model": "UserContact",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserContactPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userContact": Object {
            "isNotNull": true,
            "name": "userContact",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "device": Object {
                "name": "device",
                "type": "String",
              },
              "emails": Object {
                "isArray": true,
                "name": "emails",
                "type": "String",
              },
              "fullName": Object {
                "name": "fullName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "vcf": Object {
                "name": "vcf",
                "type": "JSON",
              },
            },
          },
        },
        "type": "CreateUserContactInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserDevice": Object {
    "model": "UserDevice",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserDevicePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userDevice": Object {
            "isNotNull": true,
            "name": "userDevice",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "deviceId": Object {
                "name": "deviceId",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "pushToken": Object {
                "name": "pushToken",
                "type": "String",
              },
              "pushTokenRequested": Object {
                "name": "pushTokenRequested",
                "type": "Boolean",
              },
              "type": Object {
                "isNotNull": true,
                "name": "type",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserDeviceInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserLocation": Object {
    "model": "UserLocation",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserLocationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userLocation": Object {
            "isNotNull": true,
            "name": "userLocation",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "kind": Object {
                "name": "kind",
                "type": "String",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserLocationInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserMessage": Object {
    "model": "UserMessage",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userMessage": Object {
            "isNotNull": true,
            "name": "userMessage",
            "properties": Object {
              "content": Object {
                "name": "content",
                "type": "JSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "received": Object {
                "name": "received",
                "type": "Boolean",
              },
              "receiverId": Object {
                "isNotNull": true,
                "name": "receiverId",
                "type": "UUID",
              },
              "receiverReaction": Object {
                "name": "receiverReaction",
                "type": "String",
              },
              "receiverRead": Object {
                "name": "receiverRead",
                "type": "Boolean",
              },
              "senderId": Object {
                "name": "senderId",
                "type": "UUID",
              },
              "senderReaction": Object {
                "name": "senderReaction",
                "type": "String",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "upload": Object {
                "name": "upload",
                "type": "JSON",
              },
              "uploadUpload": Object {
                "name": "uploadUpload",
                "type": "Upload",
              },
            },
          },
        },
        "type": "CreateUserMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserPassAction": Object {
    "model": "UserPassAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserPassActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userPassAction": Object {
            "isNotNull": true,
            "name": "userPassAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserPassActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserProfile": Object {
    "model": "UserProfile",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userProfile": Object {
            "isNotNull": true,
            "name": "userProfile",
            "properties": Object {
              "bio": Object {
                "name": "bio",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "desired": Object {
                "isArray": true,
                "name": "desired",
                "type": "String",
              },
              "displayName": Object {
                "name": "displayName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "reputation": Object {
                "name": "reputation",
                "type": "BigFloat",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserQuestion": Object {
    "model": "UserQuestion",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserQuestionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userQuestion": Object {
            "isNotNull": true,
            "name": "userQuestion",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "ownerId": Object {
                "isNotNull": true,
                "name": "ownerId",
                "type": "UUID",
              },
              "questionPrompt": Object {
                "name": "questionPrompt",
                "type": "String",
              },
              "questionType": Object {
                "name": "questionType",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserQuestionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserSavedAction": Object {
    "model": "UserSavedAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserSavedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userSavedAction": Object {
            "isNotNull": true,
            "name": "userSavedAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserSavedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserSetting": Object {
    "model": "UserSetting",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserSettingPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userSetting": Object {
            "isNotNull": true,
            "name": "userSetting",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "firstName": Object {
                "name": "firstName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "lastName": Object {
                "name": "lastName",
                "type": "String",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "searchRadius": Object {
                "name": "searchRadius",
                "type": "BigFloat",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
        },
        "type": "CreateUserSettingInput",
      },
    },
    "qtype": "mutation",
  },
  "createUserViewedAction": Object {
    "model": "UserViewedAction",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateUserViewedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "userViewedAction": Object {
            "isNotNull": true,
            "name": "userViewedAction",
            "properties": Object {
              "actionId": Object {
                "isNotNull": true,
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "CreateUserViewedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "createZipCode": Object {
    "model": "ZipCode",
    "mutationType": "create",
    "output": Object {
      "kind": "OBJECT",
      "name": "CreateZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "zipCode": Object {
            "isNotNull": true,
            "name": "zipCode",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
        },
        "type": "CreateZipCodeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteAction": Object {
    "model": "Action",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteActionBySlug": Object {
    "model": "Action",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "slug": Object {
            "isNotNull": true,
            "name": "slug",
            "type": "String",
          },
        },
        "type": "DeleteActionBySlugInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteActionGoal": Object {
    "model": "ActionGoal",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionId": Object {
            "isNotNull": true,
            "name": "actionId",
            "type": "UUID",
          },
          "goalId": Object {
            "isNotNull": true,
            "name": "goalId",
            "type": "UUID",
          },
        },
        "type": "DeleteActionGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteActionItem": Object {
    "model": "ActionItem",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteActionItemType": Object {
    "model": "ActionItemType",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionItemTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "Int",
          },
        },
        "type": "DeleteActionItemTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteActionVariation": Object {
    "model": "ActionVariation",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteActionVariationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteActionVariationInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteAuthAccount": Object {
    "model": "AuthAccount",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteAuthAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteAuthAccountInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteAuthAccountByServiceAndIdentifier": Object {
    "model": "AuthAccount",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteAuthAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "identifier": Object {
            "isNotNull": true,
            "name": "identifier",
            "type": "String",
          },
          "service": Object {
            "isNotNull": true,
            "name": "service",
            "type": "String",
          },
        },
        "type": "DeleteAuthAccountByServiceAndIdentifierInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteConnectedAccount": Object {
    "model": "ConnectedAccount",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteConnectedAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteConnectedAccountInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteConnectedAccountByServiceAndIdentifier": Object {
    "model": "ConnectedAccount",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteConnectedAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "identifier": Object {
            "isNotNull": true,
            "name": "identifier",
            "type": "String",
          },
          "service": Object {
            "isNotNull": true,
            "name": "service",
            "type": "String",
          },
        },
        "type": "DeleteConnectedAccountByServiceAndIdentifierInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteCryptoAddress": Object {
    "model": "CryptoAddress",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteCryptoAddressPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteCryptoAddressInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteCryptoAddressByAddress": Object {
    "model": "CryptoAddress",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteCryptoAddressPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "address": Object {
            "isNotNull": true,
            "name": "address",
            "type": "String",
          },
        },
        "type": "DeleteCryptoAddressByAddressInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteEmail": Object {
    "model": "Email",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteEmailByEmail": Object {
    "model": "Email",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "isNotNull": true,
            "name": "email",
            "type": "String",
          },
        },
        "type": "DeleteEmailByEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGoal": Object {
    "model": "Goal",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGoalByName": Object {
    "model": "Goal",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "name": Object {
            "isNotNull": true,
            "name": "name",
            "type": "String",
          },
        },
        "type": "DeleteGoalByNameInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGoalBySlug": Object {
    "model": "Goal",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "slug": Object {
            "isNotNull": true,
            "name": "slug",
            "type": "String",
          },
        },
        "type": "DeleteGoalBySlugInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGoalExplanation": Object {
    "model": "GoalExplanation",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGoalExplanationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteGoalExplanationInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGroup": Object {
    "model": "Group",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGroupPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteGroupInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGroupPost": Object {
    "model": "GroupPost",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGroupPostPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteGroupPostInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGroupPostComment": Object {
    "model": "GroupPostComment",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGroupPostCommentPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteGroupPostCommentInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteGroupPostReaction": Object {
    "model": "GroupPostReaction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteGroupPostReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteGroupPostReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteLocation": Object {
    "model": "Location",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteLocationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteLocationInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteLocationType": Object {
    "model": "LocationType",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteLocationTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteLocationTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteMessage": Object {
    "model": "Message",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteMessageGroup": Object {
    "model": "MessageGroup",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteMessageGroupPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteMessageGroupInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteNewsArticle": Object {
    "model": "NewsArticle",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteNewsArticlePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteNewsArticleInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteNotification": Object {
    "model": "Notification",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteNotificationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteNotificationInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteNotificationPreference": Object {
    "model": "NotificationPreference",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteNotificationPreferencePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteNotificationPreferenceInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteObject": Object {
    "model": "Object",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteObjectPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteObjectInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteObjectAttribute": Object {
    "model": "ObjectAttribute",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteObjectAttributePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteObjectAttributeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteObjectType": Object {
    "model": "ObjectType",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteObjectTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "Int",
          },
        },
        "type": "DeleteObjectTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteObjectTypeAttribute": Object {
    "model": "ObjectTypeAttribute",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteObjectTypeAttributePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteObjectTypeAttributeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteObjectTypeValue": Object {
    "model": "ObjectTypeValue",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteObjectTypeValuePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteObjectTypeValueInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteOrganizationProfile": Object {
    "model": "OrganizationProfile",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteOrganizationProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteOrganizationProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "deletePhoneNumber": Object {
    "model": "PhoneNumber",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeletePhoneNumberPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeletePhoneNumberInput",
      },
    },
    "qtype": "mutation",
  },
  "deletePhoneNumberByNumber": Object {
    "model": "PhoneNumber",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeletePhoneNumberPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "number": Object {
            "isNotNull": true,
            "name": "number",
            "type": "String",
          },
        },
        "type": "DeletePhoneNumberByNumberInput",
      },
    },
    "qtype": "mutation",
  },
  "deletePost": Object {
    "model": "Post",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeletePostPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeletePostInput",
      },
    },
    "qtype": "mutation",
  },
  "deletePostComment": Object {
    "model": "PostComment",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeletePostCommentPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeletePostCommentInput",
      },
    },
    "qtype": "mutation",
  },
  "deletePostReaction": Object {
    "model": "PostReaction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeletePostReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeletePostReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteRequiredAction": Object {
    "model": "RequiredAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteRequiredActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteRequiredActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteRewardLimit": Object {
    "model": "RewardLimit",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteRewardLimitPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteRewardLimitInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteRoleType": Object {
    "model": "RoleType",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteRoleTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "Int",
          },
        },
        "type": "DeleteRoleTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteRoleTypeByName": Object {
    "model": "RoleType",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteRoleTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "name": Object {
            "isNotNull": true,
            "name": "name",
            "type": "String",
          },
        },
        "type": "DeleteRoleTypeByNameInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteTrack": Object {
    "model": "Track",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteTrackPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteTrackInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteTrackAction": Object {
    "model": "TrackAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteTrackActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteTrackActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUser": Object {
    "model": "User",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserAction": Object {
    "model": "UserAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserActionItem": Object {
    "model": "UserActionItem",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserActionItemVerification": Object {
    "model": "UserActionItemVerification",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserActionItemVerificationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserActionItemVerificationInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserActionReaction": Object {
    "model": "UserActionReaction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserActionReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserActionReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserActionVerification": Object {
    "model": "UserActionVerification",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserActionVerificationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserActionVerificationInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserAnswer": Object {
    "model": "UserAnswer",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserAnswerPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserAnswerInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserByUsername": Object {
    "model": "User",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "username": Object {
            "isNotNull": true,
            "name": "username",
            "type": "String",
          },
        },
        "type": "DeleteUserByUsernameInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserCharacteristic": Object {
    "model": "UserCharacteristic",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserCharacteristicPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserCharacteristicInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserConnection": Object {
    "model": "UserConnection",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserConnectionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserConnectionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserContact": Object {
    "model": "UserContact",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserContactPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserContactInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserDevice": Object {
    "model": "UserDevice",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserDevicePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserDeviceInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserLocation": Object {
    "model": "UserLocation",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserLocationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserLocationInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserMessage": Object {
    "model": "UserMessage",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserPassAction": Object {
    "model": "UserPassAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserPassActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserPassActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserProfile": Object {
    "model": "UserProfile",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserQuestion": Object {
    "model": "UserQuestion",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserQuestionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserQuestionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserSavedAction": Object {
    "model": "UserSavedAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserSavedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserSavedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserSetting": Object {
    "model": "UserSetting",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserSettingPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserSettingInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteUserViewedAction": Object {
    "model": "UserViewedAction",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteUserViewedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteUserViewedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteZipCode": Object {
    "model": "ZipCode",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
        },
        "type": "DeleteZipCodeInput",
      },
    },
    "qtype": "mutation",
  },
  "deleteZipCodeByZip": Object {
    "model": "ZipCode",
    "mutationType": "delete",
    "output": Object {
      "kind": "OBJECT",
      "name": "DeleteZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "zip": Object {
            "isNotNull": true,
            "name": "zip",
            "type": "Int",
          },
        },
        "type": "DeleteZipCodeByZipInput",
      },
    },
    "qtype": "mutation",
  },
  "extendTokenExpires": Object {
    "model": "ApiToken",
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "ExtendTokenExpiresPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "amount": Object {
            "name": "amount",
            "properties": Object {
              "days": Object {
                "name": "days",
                "type": "Int",
              },
              "hours": Object {
                "name": "hours",
                "type": "Int",
              },
              "minutes": Object {
                "name": "minutes",
                "type": "Int",
              },
              "months": Object {
                "name": "months",
                "type": "Int",
              },
              "seconds": Object {
                "name": "seconds",
                "type": "Float",
              },
              "years": Object {
                "name": "years",
                "type": "Int",
              },
            },
          },
        },
        "type": "ExtendTokenExpiresInput",
      },
    },
    "qtype": "mutation",
  },
  "forgotPassword": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "ForgotPasswordPayload",
      "ofType": null,
    },
    "outputs": Array [],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "name": "email",
            "type": "String",
          },
        },
        "type": "ForgotPasswordInput",
      },
    },
    "qtype": "mutation",
  },
  "login": Object {
    "model": "ApiToken",
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "LoginPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "isNotNull": true,
            "name": "email",
            "type": "String",
          },
          "password": Object {
            "isNotNull": true,
            "name": "password",
            "type": "String",
          },
          "rememberMe": Object {
            "name": "rememberMe",
            "type": "Boolean",
          },
        },
        "type": "LoginInput",
      },
    },
    "qtype": "mutation",
  },
  "loginOneTimeToken": Object {
    "model": "ApiToken",
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "LoginOneTimeTokenPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "token": Object {
            "isNotNull": true,
            "name": "token",
            "type": "String",
          },
        },
        "type": "LoginOneTimeTokenInput",
      },
    },
    "qtype": "mutation",
  },
  "logout": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "LogoutPayload",
      "ofType": null,
    },
    "outputs": Array [],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {},
        "type": "LogoutInput",
      },
    },
    "qtype": "mutation",
  },
  "oneTimeToken": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "OneTimeTokenPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "string",
        "type": Object {
          "kind": "SCALAR",
          "name": "String",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "isNotNull": true,
            "name": "email",
            "type": "String",
          },
          "origin": Object {
            "isNotNull": true,
            "name": "origin",
            "type": "String",
          },
          "password": Object {
            "isNotNull": true,
            "name": "password",
            "type": "String",
          },
          "rememberMe": Object {
            "name": "rememberMe",
            "type": "Boolean",
          },
        },
        "type": "OneTimeTokenInput",
      },
    },
    "qtype": "mutation",
  },
  "register": Object {
    "model": "ApiToken",
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "RegisterPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "name": "email",
            "type": "String",
          },
          "password": Object {
            "name": "password",
            "type": "String",
          },
          "rememberMe": Object {
            "name": "rememberMe",
            "type": "Boolean",
          },
        },
        "type": "RegisterInput",
      },
    },
    "qtype": "mutation",
  },
  "resetPassword": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "ResetPasswordPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "newPassword": Object {
            "name": "newPassword",
            "type": "String",
          },
          "resetToken": Object {
            "name": "resetToken",
            "type": "String",
          },
          "roleId": Object {
            "name": "roleId",
            "type": "UUID",
          },
        },
        "type": "ResetPasswordInput",
      },
    },
    "qtype": "mutation",
  },
  "sendAccountDeletionEmail": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "SendAccountDeletionEmailPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {},
        "type": "SendAccountDeletionEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "sendVerificationEmail": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "SendVerificationEmailPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "name": "email",
            "type": "String",
          },
        },
        "type": "SendVerificationEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "setPassword": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "SetPasswordPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "currentPassword": Object {
            "name": "currentPassword",
            "type": "String",
          },
          "newPassword": Object {
            "name": "newPassword",
            "type": "String",
          },
        },
        "type": "SetPasswordInput",
      },
    },
    "qtype": "mutation",
  },
  "updateAction": Object {
    "model": "Action",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "activityFeedText": Object {
                "name": "activityFeedText",
                "type": "String",
              },
              "alreadyCompletedActionText": Object {
                "name": "alreadyCompletedActionText",
                "type": "String",
              },
              "approved": Object {
                "name": "approved",
                "type": "Boolean",
              },
              "callToAction": Object {
                "name": "callToAction",
                "type": "String",
              },
              "completedActionText": Object {
                "name": "completedActionText",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "discoveryDescription": Object {
                "name": "discoveryDescription",
                "type": "String",
              },
              "discoveryHeader": Object {
                "name": "discoveryHeader",
                "type": "String",
              },
              "enableNotifications": Object {
                "name": "enableNotifications",
                "type": "Boolean",
              },
              "enableNotificationsText": Object {
                "name": "enableNotificationsText",
                "type": "String",
              },
              "endDate": Object {
                "name": "endDate",
                "type": "Datetime",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrivate": Object {
                "name": "isPrivate",
                "type": "Boolean",
              },
              "isRecurring": Object {
                "name": "isRecurring",
                "type": "Boolean",
              },
              "limitedToLocation": Object {
                "name": "limitedToLocation",
                "type": "Boolean",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationRadius": Object {
                "name": "locationRadius",
                "type": "BigFloat",
              },
              "minimumGroupMembers": Object {
                "name": "minimumGroupMembers",
                "type": "Int",
              },
              "notificationObjectTemplate": Object {
                "name": "notificationObjectTemplate",
                "type": "String",
              },
              "notificationText": Object {
                "name": "notificationText",
                "type": "String",
              },
              "objectTypeId": Object {
                "name": "objectTypeId",
                "type": "Int",
              },
              "oncePerObject": Object {
                "name": "oncePerObject",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "published": Object {
                "name": "published",
                "type": "Boolean",
              },
              "recurringInterval": Object {
                "name": "recurringInterval",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "rewardAmount": Object {
                "name": "rewardAmount",
                "type": "BigFloat",
              },
              "rewardId": Object {
                "name": "rewardId",
                "type": "UUID",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "selfVerifiable": Object {
                "name": "selfVerifiable",
                "type": "Boolean",
              },
              "shareImage": Object {
                "name": "shareImage",
                "type": "JSON",
              },
              "shareImageUpload": Object {
                "name": "shareImageUpload",
                "type": "Upload",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "startDate": Object {
                "name": "startDate",
                "type": "Datetime",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "title": Object {
                "name": "title",
                "type": "String",
              },
              "titleObjectTemplate": Object {
                "name": "titleObjectTemplate",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
              "verifyRewardId": Object {
                "name": "verifyRewardId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateActionBySlug": Object {
    "model": "Action",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "activityFeedText": Object {
                "name": "activityFeedText",
                "type": "String",
              },
              "alreadyCompletedActionText": Object {
                "name": "alreadyCompletedActionText",
                "type": "String",
              },
              "approved": Object {
                "name": "approved",
                "type": "Boolean",
              },
              "callToAction": Object {
                "name": "callToAction",
                "type": "String",
              },
              "completedActionText": Object {
                "name": "completedActionText",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "discoveryDescription": Object {
                "name": "discoveryDescription",
                "type": "String",
              },
              "discoveryHeader": Object {
                "name": "discoveryHeader",
                "type": "String",
              },
              "enableNotifications": Object {
                "name": "enableNotifications",
                "type": "Boolean",
              },
              "enableNotificationsText": Object {
                "name": "enableNotificationsText",
                "type": "String",
              },
              "endDate": Object {
                "name": "endDate",
                "type": "Datetime",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrivate": Object {
                "name": "isPrivate",
                "type": "Boolean",
              },
              "isRecurring": Object {
                "name": "isRecurring",
                "type": "Boolean",
              },
              "limitedToLocation": Object {
                "name": "limitedToLocation",
                "type": "Boolean",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationRadius": Object {
                "name": "locationRadius",
                "type": "BigFloat",
              },
              "minimumGroupMembers": Object {
                "name": "minimumGroupMembers",
                "type": "Int",
              },
              "notificationObjectTemplate": Object {
                "name": "notificationObjectTemplate",
                "type": "String",
              },
              "notificationText": Object {
                "name": "notificationText",
                "type": "String",
              },
              "objectTypeId": Object {
                "name": "objectTypeId",
                "type": "Int",
              },
              "oncePerObject": Object {
                "name": "oncePerObject",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "published": Object {
                "name": "published",
                "type": "Boolean",
              },
              "recurringInterval": Object {
                "name": "recurringInterval",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "rewardAmount": Object {
                "name": "rewardAmount",
                "type": "BigFloat",
              },
              "rewardId": Object {
                "name": "rewardId",
                "type": "UUID",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "selfVerifiable": Object {
                "name": "selfVerifiable",
                "type": "Boolean",
              },
              "shareImage": Object {
                "name": "shareImage",
                "type": "JSON",
              },
              "shareImageUpload": Object {
                "name": "shareImageUpload",
                "type": "Upload",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "startDate": Object {
                "name": "startDate",
                "type": "Datetime",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "title": Object {
                "name": "title",
                "type": "String",
              },
              "titleObjectTemplate": Object {
                "name": "titleObjectTemplate",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
              "verifyRewardId": Object {
                "name": "verifyRewardId",
                "type": "UUID",
              },
            },
          },
          "slug": Object {
            "isNotNull": true,
            "name": "slug",
            "type": "String",
          },
        },
        "type": "UpdateActionBySlugInput",
      },
    },
    "qtype": "mutation",
  },
  "updateActionGoal": Object {
    "model": "ActionGoal",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "actionId": Object {
            "isNotNull": true,
            "name": "actionId",
            "type": "UUID",
          },
          "goalId": Object {
            "isNotNull": true,
            "name": "goalId",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "goalId": Object {
                "name": "goalId",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateActionGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "updateActionItem": Object {
    "model": "ActionItem",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "embedCode": Object {
                "name": "embedCode",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isRequired": Object {
                "name": "isRequired",
                "type": "Boolean",
              },
              "itemOrder": Object {
                "name": "itemOrder",
                "type": "Int",
              },
              "itemTypeId": Object {
                "name": "itemTypeId",
                "type": "Int",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationRadius": Object {
                "name": "locationRadius",
                "type": "BigFloat",
              },
              "media": Object {
                "name": "media",
                "type": "JSON",
              },
              "mediaUpload": Object {
                "name": "mediaUpload",
                "type": "Upload",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "notificationText": Object {
                "name": "notificationText",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "rewardWeight": Object {
                "name": "rewardWeight",
                "type": "BigFloat",
              },
              "timeRequired": Object {
                "name": "timeRequired",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "updateActionItemType": Object {
    "model": "ActionItemType",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionItemTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "Int",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "Int",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateActionItemTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "updateActionVariation": Object {
    "model": "ActionVariation",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateActionVariationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "dob": Object {
                "isArray": true,
                "name": "dob",
                "type": "Date",
              },
              "gender": Object {
                "isArray": true,
                "name": "gender",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "income": Object {
                "isArray": true,
                "name": "income",
                "type": "BigFloat",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "title": Object {
                "name": "title",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateActionVariationInput",
      },
    },
    "qtype": "mutation",
  },
  "updateAuthAccount": Object {
    "model": "AuthAccount",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateAuthAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "details": Object {
                "name": "details",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "identifier": Object {
                "name": "identifier",
                "type": "String",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "service": Object {
                "name": "service",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateAuthAccountInput",
      },
    },
    "qtype": "mutation",
  },
  "updateAuthAccountByServiceAndIdentifier": Object {
    "model": "AuthAccount",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateAuthAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "identifier": Object {
            "isNotNull": true,
            "name": "identifier",
            "type": "String",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "details": Object {
                "name": "details",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "identifier": Object {
                "name": "identifier",
                "type": "String",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "service": Object {
                "name": "service",
                "type": "String",
              },
            },
          },
          "service": Object {
            "isNotNull": true,
            "name": "service",
            "type": "String",
          },
        },
        "type": "UpdateAuthAccountByServiceAndIdentifierInput",
      },
    },
    "qtype": "mutation",
  },
  "updateConnectedAccount": Object {
    "model": "ConnectedAccount",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateConnectedAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "details": Object {
                "name": "details",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "identifier": Object {
                "name": "identifier",
                "type": "String",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "service": Object {
                "name": "service",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateConnectedAccountInput",
      },
    },
    "qtype": "mutation",
  },
  "updateConnectedAccountByServiceAndIdentifier": Object {
    "model": "ConnectedAccount",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateConnectedAccountPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "identifier": Object {
            "isNotNull": true,
            "name": "identifier",
            "type": "String",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "details": Object {
                "name": "details",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "identifier": Object {
                "name": "identifier",
                "type": "String",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "service": Object {
                "name": "service",
                "type": "String",
              },
            },
          },
          "service": Object {
            "isNotNull": true,
            "name": "service",
            "type": "String",
          },
        },
        "type": "UpdateConnectedAccountByServiceAndIdentifierInput",
      },
    },
    "qtype": "mutation",
  },
  "updateCryptoAddress": Object {
    "model": "CryptoAddress",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateCryptoAddressPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "address": Object {
                "name": "address",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrimary": Object {
                "name": "isPrimary",
                "type": "Boolean",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateCryptoAddressInput",
      },
    },
    "qtype": "mutation",
  },
  "updateCryptoAddressByAddress": Object {
    "model": "CryptoAddress",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateCryptoAddressPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "address": Object {
            "isNotNull": true,
            "name": "address",
            "type": "String",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "address": Object {
                "name": "address",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrimary": Object {
                "name": "isPrimary",
                "type": "Boolean",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateCryptoAddressByAddressInput",
      },
    },
    "qtype": "mutation",
  },
  "updateEmail": Object {
    "model": "Email",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "email": Object {
                "name": "email",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrimary": Object {
                "name": "isPrimary",
                "type": "Boolean",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "updateEmailByEmail": Object {
    "model": "Email",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateEmailPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "email": Object {
            "isNotNull": true,
            "name": "email",
            "type": "String",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "email": Object {
                "name": "email",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrimary": Object {
                "name": "isPrimary",
                "type": "Boolean",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateEmailByEmailInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGoal": Object {
    "model": "Goal",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "icon": Object {
                "name": "icon",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "shortName": Object {
                "name": "shortName",
                "type": "String",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "subHead": Object {
                "name": "subHead",
                "type": "String",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateGoalInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGoalByName": Object {
    "model": "Goal",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "name": Object {
            "isNotNull": true,
            "name": "name",
            "type": "String",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "icon": Object {
                "name": "icon",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "shortName": Object {
                "name": "shortName",
                "type": "String",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "subHead": Object {
                "name": "subHead",
                "type": "String",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateGoalByNameInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGoalBySlug": Object {
    "model": "Goal",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGoalPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "icon": Object {
                "name": "icon",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "search": Object {
                "name": "search",
                "type": "FullText",
              },
              "shortName": Object {
                "name": "shortName",
                "type": "String",
              },
              "slug": Object {
                "name": "slug",
                "type": "String",
              },
              "subHead": Object {
                "name": "subHead",
                "type": "String",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
          "slug": Object {
            "isNotNull": true,
            "name": "slug",
            "type": "String",
          },
        },
        "type": "UpdateGoalBySlugInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGoalExplanation": Object {
    "model": "GoalExplanation",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGoalExplanationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "audio": Object {
                "name": "audio",
                "type": "JSON",
              },
              "audioDuration": Object {
                "name": "audioDuration",
                "properties": Object {
                  "days": Object {
                    "name": "days",
                    "type": "Int",
                  },
                  "hours": Object {
                    "name": "hours",
                    "type": "Int",
                  },
                  "minutes": Object {
                    "name": "minutes",
                    "type": "Int",
                  },
                  "months": Object {
                    "name": "months",
                    "type": "Int",
                  },
                  "seconds": Object {
                    "name": "seconds",
                    "type": "Float",
                  },
                  "years": Object {
                    "name": "years",
                    "type": "Int",
                  },
                },
              },
              "audioUpload": Object {
                "name": "audioUpload",
                "type": "Upload",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "explanation": Object {
                "name": "explanation",
                "type": "String",
              },
              "explanationTitle": Object {
                "name": "explanationTitle",
                "type": "String",
              },
              "goalId": Object {
                "name": "goalId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateGoalExplanationInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGroup": Object {
    "model": "Group",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGroupPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateGroupInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGroupPost": Object {
    "model": "GroupPost",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGroupPostPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "flagged": Object {
                "name": "flagged",
                "type": "Boolean",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "taggedUserIds": Object {
                "isArray": true,
                "name": "taggedUserIds",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateGroupPostInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGroupPostComment": Object {
    "model": "GroupPostComment",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGroupPostCommentPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "commenterId": Object {
                "name": "commenterId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "parentId": Object {
                "name": "parentId",
                "type": "UUID",
              },
              "postId": Object {
                "name": "postId",
                "type": "UUID",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateGroupPostCommentInput",
      },
    },
    "qtype": "mutation",
  },
  "updateGroupPostReaction": Object {
    "model": "GroupPostReaction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateGroupPostReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "postId": Object {
                "name": "postId",
                "type": "UUID",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "reacterId": Object {
                "name": "reacterId",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateGroupPostReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateLocation": Object {
    "model": "Location",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateLocationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "locationType": Object {
                "name": "locationType",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateLocationInput",
      },
    },
    "qtype": "mutation",
  },
  "updateLocationType": Object {
    "model": "LocationType",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateLocationTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateLocationTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "updateMessage": Object {
    "model": "Message",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "content": Object {
                "name": "content",
                "type": "JSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "groupId": Object {
                "name": "groupId",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "senderId": Object {
                "name": "senderId",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "upload": Object {
                "name": "upload",
                "type": "JSON",
              },
              "uploadUpload": Object {
                "name": "uploadUpload",
                "type": "Upload",
              },
            },
          },
        },
        "type": "UpdateMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "updateMessageGroup": Object {
    "model": "MessageGroup",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateMessageGroupPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "memberIds": Object {
                "isArray": true,
                "name": "memberIds",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateMessageGroupInput",
      },
    },
    "qtype": "mutation",
  },
  "updateNewsArticle": Object {
    "model": "NewsArticle",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateNewsArticlePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "link": Object {
                "name": "link",
                "type": "String",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "publishedAt": Object {
                "name": "publishedAt",
                "type": "Datetime",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateNewsArticleInput",
      },
    },
    "qtype": "mutation",
  },
  "updateNotification": Object {
    "model": "Notification",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateNotificationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actorId": Object {
                "name": "actorId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "entityType": Object {
                "name": "entityType",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "notificationText": Object {
                "name": "notificationText",
                "type": "String",
              },
              "notificationType": Object {
                "name": "notificationType",
                "type": "String",
              },
              "recipientId": Object {
                "name": "recipientId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateNotificationInput",
      },
    },
    "qtype": "mutation",
  },
  "updateNotificationPreference": Object {
    "model": "NotificationPreference",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateNotificationPreferencePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "emails": Object {
                "name": "emails",
                "type": "Boolean",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "notifications": Object {
                "name": "notifications",
                "type": "Boolean",
              },
              "sms": Object {
                "name": "sms",
                "type": "Boolean",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateNotificationPreferenceInput",
      },
    },
    "qtype": "mutation",
  },
  "updateObject": Object {
    "model": "Object",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateObjectPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "media": Object {
                "name": "media",
                "type": "JSON",
              },
              "mediaUpload": Object {
                "name": "mediaUpload",
                "type": "Upload",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "typeId": Object {
                "name": "typeId",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateObjectInput",
      },
    },
    "qtype": "mutation",
  },
  "updateObjectAttribute": Object {
    "model": "ObjectAttribute",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateObjectAttributePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "numeric": Object {
                "name": "numeric",
                "type": "BigFloat",
              },
              "objectId": Object {
                "name": "objectId",
                "type": "UUID",
              },
              "objectTypeAttributeId": Object {
                "name": "objectTypeAttributeId",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "text": Object {
                "name": "text",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "valueId": Object {
                "name": "valueId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateObjectAttributeInput",
      },
    },
    "qtype": "mutation",
  },
  "updateObjectType": Object {
    "model": "ObjectType",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateObjectTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "Int",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "icon": Object {
                "name": "icon",
                "type": "JSON",
              },
              "iconUpload": Object {
                "name": "iconUpload",
                "type": "Upload",
              },
              "id": Object {
                "name": "id",
                "type": "Int",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateObjectTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "updateObjectTypeAttribute": Object {
    "model": "ObjectTypeAttribute",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateObjectTypeAttributePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "attrOrder": Object {
                "name": "attrOrder",
                "type": "Int",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isRequired": Object {
                "name": "isRequired",
                "type": "Boolean",
              },
              "label": Object {
                "name": "label",
                "type": "String",
              },
              "max": Object {
                "name": "max",
                "type": "Int",
              },
              "min": Object {
                "name": "min",
                "type": "Int",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "objectTypeId": Object {
                "name": "objectTypeId",
                "type": "Int",
              },
              "pattern": Object {
                "name": "pattern",
                "type": "String",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "unit": Object {
                "name": "unit",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateObjectTypeAttributeInput",
      },
    },
    "qtype": "mutation",
  },
  "updateObjectTypeValue": Object {
    "model": "ObjectTypeValue",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateObjectTypeValuePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "attrId": Object {
                "name": "attrId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "icon": Object {
                "name": "icon",
                "type": "JSON",
              },
              "iconUpload": Object {
                "name": "iconUpload",
                "type": "Upload",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "numeric": Object {
                "name": "numeric",
                "type": "BigFloat",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "text": Object {
                "name": "text",
                "type": "String",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "valueOrder": Object {
                "name": "valueOrder",
                "type": "Int",
              },
            },
          },
        },
        "type": "UpdateObjectTypeValueInput",
      },
    },
    "qtype": "mutation",
  },
  "updateOrganizationProfile": Object {
    "model": "OrganizationProfile",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateOrganizationProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "headerImage": Object {
                "name": "headerImage",
                "type": "JSON",
              },
              "headerImageUpload": Object {
                "name": "headerImageUpload",
                "type": "Upload",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "organizationId": Object {
                "name": "organizationId",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "reputation": Object {
                "name": "reputation",
                "type": "BigFloat",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "website": Object {
                "name": "website",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateOrganizationProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "updatePhoneNumber": Object {
    "model": "PhoneNumber",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdatePhoneNumberPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "cc": Object {
                "name": "cc",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrimary": Object {
                "name": "isPrimary",
                "type": "Boolean",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "number": Object {
                "name": "number",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdatePhoneNumberInput",
      },
    },
    "qtype": "mutation",
  },
  "updatePhoneNumberByNumber": Object {
    "model": "PhoneNumber",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdatePhoneNumberPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "number": Object {
            "isNotNull": true,
            "name": "number",
            "type": "String",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "cc": Object {
                "name": "cc",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isPrimary": Object {
                "name": "isPrimary",
                "type": "Boolean",
              },
              "isVerified": Object {
                "name": "isVerified",
                "type": "Boolean",
              },
              "number": Object {
                "name": "number",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdatePhoneNumberByNumberInput",
      },
    },
    "qtype": "mutation",
  },
  "updatePost": Object {
    "model": "Post",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdatePostPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "flagged": Object {
                "name": "flagged",
                "type": "Boolean",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "taggedUserIds": Object {
                "isArray": true,
                "name": "taggedUserIds",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "url": Object {
                "name": "url",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdatePostInput",
      },
    },
    "qtype": "mutation",
  },
  "updatePostComment": Object {
    "model": "PostComment",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdatePostCommentPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "commenterId": Object {
                "name": "commenterId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "parentId": Object {
                "name": "parentId",
                "type": "UUID",
              },
              "postId": Object {
                "name": "postId",
                "type": "UUID",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdatePostCommentInput",
      },
    },
    "qtype": "mutation",
  },
  "updatePostReaction": Object {
    "model": "PostReaction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdatePostReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "postId": Object {
                "name": "postId",
                "type": "UUID",
              },
              "posterId": Object {
                "name": "posterId",
                "type": "UUID",
              },
              "reacterId": Object {
                "name": "reacterId",
                "type": "UUID",
              },
              "type": Object {
                "name": "type",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdatePostReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateRequiredAction": Object {
    "model": "RequiredAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateRequiredActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "actionOrder": Object {
                "name": "actionOrder",
                "type": "Int",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "requiredId": Object {
                "name": "requiredId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateRequiredActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateRewardLimit": Object {
    "model": "RewardLimit",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateRewardLimitPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "dailyLimit": Object {
                "name": "dailyLimit",
                "type": "BigFloat",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "rewardAmount": Object {
                "name": "rewardAmount",
                "type": "BigFloat",
              },
              "rewardUnit": Object {
                "name": "rewardUnit",
                "type": "String",
              },
              "totalLimit": Object {
                "name": "totalLimit",
                "type": "BigFloat",
              },
              "totalRewardLimit": Object {
                "name": "totalRewardLimit",
                "type": "BigFloat",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userDailyLimit": Object {
                "name": "userDailyLimit",
                "type": "BigFloat",
              },
              "userTotalLimit": Object {
                "name": "userTotalLimit",
                "type": "BigFloat",
              },
              "userWeeklyLimit": Object {
                "name": "userWeeklyLimit",
                "type": "BigFloat",
              },
              "weeklyLimit": Object {
                "name": "weeklyLimit",
                "type": "BigFloat",
              },
            },
          },
        },
        "type": "UpdateRewardLimitInput",
      },
    },
    "qtype": "mutation",
  },
  "updateRoleType": Object {
    "model": "RoleType",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateRoleTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "Int",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "id": Object {
                "name": "id",
                "type": "Int",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateRoleTypeInput",
      },
    },
    "qtype": "mutation",
  },
  "updateRoleTypeByName": Object {
    "model": "RoleType",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateRoleTypePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "name": Object {
            "isNotNull": true,
            "name": "name",
            "type": "String",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "id": Object {
                "name": "id",
                "type": "Int",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateRoleTypeByNameInput",
      },
    },
    "qtype": "mutation",
  },
  "updateTrack": Object {
    "model": "Track",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateTrackPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "icon": Object {
                "name": "icon",
                "type": "JSON",
              },
              "iconUpload": Object {
                "name": "iconUpload",
                "type": "Upload",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isApproved": Object {
                "name": "isApproved",
                "type": "Boolean",
              },
              "isPublished": Object {
                "name": "isPublished",
                "type": "Boolean",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "objectTypeId": Object {
                "name": "objectTypeId",
                "type": "Int",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "photo": Object {
                "name": "photo",
                "type": "JSON",
              },
              "photoUpload": Object {
                "name": "photoUpload",
                "type": "Upload",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateTrackInput",
      },
    },
    "qtype": "mutation",
  },
  "updateTrackAction": Object {
    "model": "TrackAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateTrackActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "isRequired": Object {
                "name": "isRequired",
                "type": "Boolean",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "trackId": Object {
                "name": "trackId",
                "type": "UUID",
              },
              "trackOrder": Object {
                "name": "trackOrder",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateTrackActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUser": Object {
    "model": "User",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "displayName": Object {
                "name": "displayName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "searchTsv": Object {
                "name": "searchTsv",
                "type": "FullText",
              },
              "type": Object {
                "name": "type",
                "type": "Int",
              },
              "username": Object {
                "name": "username",
                "type": "String",
              },
            },
          },
        },
        "type": "UpdateUserInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserAction": Object {
    "model": "UserAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "actionStarted": Object {
                "name": "actionStarted",
                "type": "Datetime",
              },
              "complete": Object {
                "name": "complete",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "objectId": Object {
                "name": "objectId",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "rejected": Object {
                "name": "rejected",
                "type": "Boolean",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "userRating": Object {
                "name": "userRating",
                "type": "Int",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
              "verifiedDate": Object {
                "name": "verifiedDate",
                "type": "Datetime",
              },
            },
          },
        },
        "type": "UpdateUserActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserActionItem": Object {
    "model": "UserActionItem",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserActionItemPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "actionItemId": Object {
                "name": "actionItemId",
                "type": "UUID",
              },
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "complete": Object {
                "name": "complete",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "media": Object {
                "name": "media",
                "type": "JSON",
              },
              "mediaUpload": Object {
                "name": "mediaUpload",
                "type": "Upload",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "text": Object {
                "name": "text",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
            },
          },
        },
        "type": "UpdateUserActionItemInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserActionItemVerification": Object {
    "model": "UserActionItemVerification",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserActionItemVerificationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "actionItemId": Object {
                "name": "actionItemId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "notes": Object {
                "name": "notes",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "rejected": Object {
                "name": "rejected",
                "type": "Boolean",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "name": "userActionId",
                "type": "UUID",
              },
              "userActionItemId": Object {
                "name": "userActionItemId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
              "verifierId": Object {
                "name": "verifierId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserActionItemVerificationInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserActionReaction": Object {
    "model": "UserActionReaction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserActionReactionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "reacterId": Object {
                "name": "reacterId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserActionReactionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserActionVerification": Object {
    "model": "UserActionVerification",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserActionVerificationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "notes": Object {
                "name": "notes",
                "type": "String",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "rejected": Object {
                "name": "rejected",
                "type": "Boolean",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userActionId": Object {
                "name": "userActionId",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "verified": Object {
                "name": "verified",
                "type": "Boolean",
              },
              "verifierId": Object {
                "name": "verifierId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserActionVerificationInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserAnswer": Object {
    "model": "UserAnswer",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserAnswerPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "image": Object {
                "name": "image",
                "type": "JSON",
              },
              "imageUpload": Object {
                "name": "imageUpload",
                "type": "Upload",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "numeric": Object {
                "name": "numeric",
                "type": "BigFloat",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "questionId": Object {
                "name": "questionId",
                "type": "UUID",
              },
              "text": Object {
                "name": "text",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserAnswerInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserByUsername": Object {
    "model": "User",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "displayName": Object {
                "name": "displayName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "searchTsv": Object {
                "name": "searchTsv",
                "type": "FullText",
              },
              "type": Object {
                "name": "type",
                "type": "Int",
              },
              "username": Object {
                "name": "username",
                "type": "String",
              },
            },
          },
          "username": Object {
            "isNotNull": true,
            "name": "username",
            "type": "String",
          },
        },
        "type": "UpdateUserByUsernameInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserCharacteristic": Object {
    "model": "UserCharacteristic",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserCharacteristicPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "age": Object {
                "name": "age",
                "type": "Int",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "diyLevel": Object {
                "name": "diyLevel",
                "type": "Int",
              },
              "dob": Object {
                "name": "dob",
                "type": "Date",
              },
              "education": Object {
                "name": "education",
                "type": "String",
              },
              "freeTime": Object {
                "name": "freeTime",
                "type": "Int",
              },
              "gardenerLevel": Object {
                "name": "gardenerLevel",
                "type": "Int",
              },
              "gender": Object {
                "name": "gender",
                "type": "String",
              },
              "homeOwnership": Object {
                "name": "homeOwnership",
                "type": "Int",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "income": Object {
                "name": "income",
                "type": "BigFloat",
              },
              "race": Object {
                "name": "race",
                "type": "String",
              },
              "researchToDoer": Object {
                "name": "researchToDoer",
                "type": "Int",
              },
              "treeHuggerLevel": Object {
                "name": "treeHuggerLevel",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserCharacteristicInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserConnection": Object {
    "model": "UserConnection",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserConnectionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "accepted": Object {
                "name": "accepted",
                "type": "Boolean",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "requesterId": Object {
                "name": "requesterId",
                "type": "UUID",
              },
              "responderId": Object {
                "name": "responderId",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserConnectionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserContact": Object {
    "model": "UserContact",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserContactPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "device": Object {
                "name": "device",
                "type": "String",
              },
              "emails": Object {
                "isArray": true,
                "name": "emails",
                "type": "String",
              },
              "fullName": Object {
                "name": "fullName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "vcf": Object {
                "name": "vcf",
                "type": "JSON",
              },
            },
          },
        },
        "type": "UpdateUserContactInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserDevice": Object {
    "model": "UserDevice",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserDevicePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "data": Object {
                "name": "data",
                "type": "JSON",
              },
              "deviceId": Object {
                "name": "deviceId",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "pushToken": Object {
                "name": "pushToken",
                "type": "String",
              },
              "pushTokenRequested": Object {
                "name": "pushTokenRequested",
                "type": "Boolean",
              },
              "type": Object {
                "name": "type",
                "type": "Int",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserDeviceInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserLocation": Object {
    "model": "UserLocation",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserLocationPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "description": Object {
                "name": "description",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "kind": Object {
                "name": "kind",
                "type": "String",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "name": Object {
                "name": "name",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserLocationInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserMessage": Object {
    "model": "UserMessage",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserMessagePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "content": Object {
                "name": "content",
                "type": "JSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "received": Object {
                "name": "received",
                "type": "Boolean",
              },
              "receiverId": Object {
                "name": "receiverId",
                "type": "UUID",
              },
              "receiverReaction": Object {
                "name": "receiverReaction",
                "type": "String",
              },
              "receiverRead": Object {
                "name": "receiverRead",
                "type": "Boolean",
              },
              "senderId": Object {
                "name": "senderId",
                "type": "UUID",
              },
              "senderReaction": Object {
                "name": "senderReaction",
                "type": "String",
              },
              "type": Object {
                "name": "type",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "upload": Object {
                "name": "upload",
                "type": "JSON",
              },
              "uploadUpload": Object {
                "name": "uploadUpload",
                "type": "Upload",
              },
            },
          },
        },
        "type": "UpdateUserMessageInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserPassAction": Object {
    "model": "UserPassAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserPassActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserPassActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserProfile": Object {
    "model": "UserProfile",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserProfilePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "bio": Object {
                "name": "bio",
                "type": "String",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "desired": Object {
                "isArray": true,
                "name": "desired",
                "type": "String",
              },
              "displayName": Object {
                "name": "displayName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "profilePicture": Object {
                "name": "profilePicture",
                "type": "JSON",
              },
              "profilePictureUpload": Object {
                "name": "profilePictureUpload",
                "type": "Upload",
              },
              "reputation": Object {
                "name": "reputation",
                "type": "BigFloat",
              },
              "tags": Object {
                "isArray": true,
                "name": "tags",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserProfileInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserQuestion": Object {
    "model": "UserQuestion",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserQuestionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "ownerId": Object {
                "name": "ownerId",
                "type": "UUID",
              },
              "questionPrompt": Object {
                "name": "questionPrompt",
                "type": "String",
              },
              "questionType": Object {
                "name": "questionType",
                "type": "String",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserQuestionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserSavedAction": Object {
    "model": "UserSavedAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserSavedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserSavedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserSetting": Object {
    "model": "UserSetting",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserSettingPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "firstName": Object {
                "name": "firstName",
                "type": "String",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "lastName": Object {
                "name": "lastName",
                "type": "String",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "searchRadius": Object {
                "name": "searchRadius",
                "type": "BigFloat",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
        },
        "type": "UpdateUserSettingInput",
      },
    },
    "qtype": "mutation",
  },
  "updateUserViewedAction": Object {
    "model": "UserViewedAction",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateUserViewedActionPayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "actionId": Object {
                "name": "actionId",
                "type": "UUID",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "userId": Object {
                "name": "userId",
                "type": "UUID",
              },
            },
          },
        },
        "type": "UpdateUserViewedActionInput",
      },
    },
    "qtype": "mutation",
  },
  "updateZipCode": Object {
    "model": "ZipCode",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "id": Object {
            "isNotNull": true,
            "name": "id",
            "type": "UUID",
          },
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
        },
        "type": "UpdateZipCodeInput",
      },
    },
    "qtype": "mutation",
  },
  "updateZipCodeByZip": Object {
    "model": "ZipCode",
    "mutationType": "patch",
    "output": Object {
      "kind": "OBJECT",
      "name": "UpdateZipCodePayload",
      "ofType": null,
    },
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "patch": Object {
            "isNotNull": true,
            "name": "patch",
            "properties": Object {
              "bbox": Object {
                "name": "bbox",
                "type": "GeoJSON",
              },
              "createdAt": Object {
                "name": "createdAt",
                "type": "Datetime",
              },
              "createdBy": Object {
                "name": "createdBy",
                "type": "UUID",
              },
              "id": Object {
                "name": "id",
                "type": "UUID",
              },
              "location": Object {
                "name": "location",
                "type": "GeoJSON",
              },
              "updatedAt": Object {
                "name": "updatedAt",
                "type": "Datetime",
              },
              "updatedBy": Object {
                "name": "updatedBy",
                "type": "UUID",
              },
              "zip": Object {
                "name": "zip",
                "type": "Int",
              },
            },
          },
          "zip": Object {
            "isNotNull": true,
            "name": "zip",
            "type": "Int",
          },
        },
        "type": "UpdateZipCodeByZipInput",
      },
    },
    "qtype": "mutation",
  },
  "uuidGenerateV4": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "UuidGenerateV4Payload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "uuid",
        "type": Object {
          "kind": "SCALAR",
          "name": "UUID",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {},
        "type": "UuidGenerateV4Input",
      },
    },
    "qtype": "mutation",
  },
  "verifyEmail": Object {
    "mutationType": "other",
    "output": Object {
      "kind": "OBJECT",
      "name": "VerifyEmailPayload",
      "ofType": null,
    },
    "outputs": Array [
      Object {
        "name": "boolean",
        "type": Object {
          "kind": "SCALAR",
          "name": "Boolean",
          "ofType": null,
        },
      },
    ],
    "properties": Object {
      "input": Object {
        "isNotNull": true,
        "properties": Object {
          "emailId": Object {
            "name": "emailId",
            "type": "UUID",
          },
          "token": Object {
            "name": "token",
            "type": "String",
          },
        },
        "type": "VerifyEmailInput",
      },
    },
    "qtype": "mutation",
  },
}
`;

exports[`queriesDbe 1`] = `
Object {
  "_meta": Object {
    "model": "Metaschema",
    "properties": Object {},
    "qtype": "getOne",
    "selection": Array [
      Object {
        "model": "MetaschemaTable",
        "name": "tables",
        "properties": Object {},
        "qtype": "getOne",
        "selection": Array [
          "name",
          "query",
          "inflection",
          "relations",
          "fields",
          "constraints",
          "foreignKeyConstraints",
          "primaryKeyConstraints",
          "uniqueConstraints",
          "checkConstraints",
          "exclusionConstraints",
        ],
      },
    ],
  },
  "action": Object {
    "model": "Action",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "slug",
      "photo",
      "shareImage",
      "title",
      "titleObjectTemplate",
      "url",
      "description",
      "discoveryHeader",
      "discoveryDescription",
      "notificationText",
      "notificationObjectTemplate",
      "enableNotifications",
      "enableNotificationsText",
      "search",
      "locationRadius",
      "startDate",
      "endDate",
      "approved",
      "published",
      "isPrivate",
      "rewardAmount",
      "activityFeedText",
      "callToAction",
      "completedActionText",
      "alreadyCompletedActionText",
      "selfVerifiable",
      "isRecurring",
      "oncePerObject",
      "minimumGroupMembers",
      "limitedToLocation",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
      "ownerId",
      "objectTypeId",
      "rewardId",
      "verifyRewardId",
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      Object {
        "model": "ActionVariation",
        "name": "actionVariations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "photo",
          "title",
          "description",
          "income",
          "gender",
          "dob",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "timeRequired",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "location",
          "locationRadius",
          "rewardWeight",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "itemTypeId",
          "ownerId",
          "actionId",
          "itemType",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActionsByRequiredId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "TrackAction",
        "name": "trackActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "trackOrder",
          "isRequired",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "trackId",
          "action",
          "owner",
          "track",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      "searchRank",
      Object {
        "model": "Goal",
        "name": "goals",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "slug",
          "shortName",
          "icon",
          "subHead",
          "tags",
          "search",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "searchRank",
        ],
      },
    ],
  },
  "actionBySlug": Object {
    "model": "Action",
    "properties": Object {
      "slug": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "slug",
      "photo",
      "shareImage",
      "title",
      "titleObjectTemplate",
      "url",
      "description",
      "discoveryHeader",
      "discoveryDescription",
      "notificationText",
      "notificationObjectTemplate",
      "enableNotifications",
      "enableNotificationsText",
      "search",
      "locationRadius",
      "startDate",
      "endDate",
      "approved",
      "published",
      "isPrivate",
      "rewardAmount",
      "activityFeedText",
      "callToAction",
      "completedActionText",
      "alreadyCompletedActionText",
      "selfVerifiable",
      "isRecurring",
      "oncePerObject",
      "minimumGroupMembers",
      "limitedToLocation",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
      "ownerId",
      "objectTypeId",
      "rewardId",
      "verifyRewardId",
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      Object {
        "model": "ActionVariation",
        "name": "actionVariations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "photo",
          "title",
          "description",
          "income",
          "gender",
          "dob",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "timeRequired",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "location",
          "locationRadius",
          "rewardWeight",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "itemTypeId",
          "ownerId",
          "actionId",
          "itemType",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActionsByRequiredId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "TrackAction",
        "name": "trackActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "trackOrder",
          "isRequired",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "trackId",
          "action",
          "owner",
          "track",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      "searchRank",
      Object {
        "model": "Goal",
        "name": "goals",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "slug",
          "shortName",
          "icon",
          "subHead",
          "tags",
          "search",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "searchRank",
        ],
      },
    ],
  },
  "actionGoal": Object {
    "model": "ActionGoal",
    "properties": Object {
      "actionId": Object {
        "isNotNull": true,
        "type": "UUID",
      },
      "goalId": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "actionId",
      "goalId",
    ],
  },
  "actionGoals": Object {
    "model": "ActionGoal",
    "qtype": "getMany",
    "selection": Array [
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "actionId",
      "goalId",
    ],
  },
  "actionItem": Object {
    "model": "ActionItem",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "description",
      "type",
      "itemOrder",
      "isRequired",
      "notificationText",
      "embedCode",
      "url",
      "media",
      "locationRadius",
      "rewardWeight",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "itemTypeId",
      "ownerId",
      "actionId",
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
    ],
  },
  "actionItemType": Object {
    "model": "ActionItemType",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "Int",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "description",
      "image",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "ActionItem",
        "name": "actionItemsByItemTypeId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "timeRequired",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "location",
          "locationRadius",
          "rewardWeight",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "itemTypeId",
          "ownerId",
          "actionId",
          "itemType",
          "owner",
          "action",
        ],
      },
    ],
  },
  "actionItemTypes": Object {
    "model": "ActionItemType",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "description",
      "image",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "ActionItem",
        "name": "actionItemsByItemTypeId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "timeRequired",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "location",
          "locationRadius",
          "rewardWeight",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "itemTypeId",
          "ownerId",
          "actionId",
          "itemType",
          "owner",
          "action",
        ],
      },
    ],
  },
  "actionItems": Object {
    "model": "ActionItem",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "description",
      "type",
      "itemOrder",
      "isRequired",
      "notificationText",
      "embedCode",
      "url",
      "media",
      "locationRadius",
      "rewardWeight",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "itemTypeId",
      "ownerId",
      "actionId",
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
    ],
  },
  "actionVariation": Object {
    "model": "ActionVariation",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "photo",
      "title",
      "description",
      "income",
      "gender",
      "dob",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "actionId",
    ],
  },
  "actionVariations": Object {
    "model": "ActionVariation",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "photo",
      "title",
      "description",
      "income",
      "gender",
      "dob",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "actionId",
    ],
  },
  "actions": Object {
    "model": "Action",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "slug",
      "photo",
      "shareImage",
      "title",
      "titleObjectTemplate",
      "url",
      "description",
      "discoveryHeader",
      "discoveryDescription",
      "notificationText",
      "notificationObjectTemplate",
      "enableNotifications",
      "enableNotificationsText",
      "search",
      "locationRadius",
      "startDate",
      "endDate",
      "approved",
      "published",
      "isPrivate",
      "rewardAmount",
      "activityFeedText",
      "callToAction",
      "completedActionText",
      "alreadyCompletedActionText",
      "selfVerifiable",
      "isRecurring",
      "oncePerObject",
      "minimumGroupMembers",
      "limitedToLocation",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
      "ownerId",
      "objectTypeId",
      "rewardId",
      "verifyRewardId",
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      Object {
        "model": "ActionVariation",
        "name": "actionVariations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "photo",
          "title",
          "description",
          "income",
          "gender",
          "dob",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "timeRequired",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "location",
          "locationRadius",
          "rewardWeight",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "itemTypeId",
          "ownerId",
          "actionId",
          "itemType",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActionsByRequiredId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "TrackAction",
        "name": "trackActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "trackOrder",
          "isRequired",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "trackId",
          "action",
          "owner",
          "track",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      "searchRank",
      Object {
        "model": "Goal",
        "name": "goals",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "slug",
          "shortName",
          "icon",
          "subHead",
          "tags",
          "search",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "searchRank",
        ],
      },
    ],
  },
  "authAccount": Object {
    "model": "AuthAccount",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "service",
      "identifier",
      "details",
      "isVerified",
    ],
  },
  "authAccountByServiceAndIdentifier": Object {
    "model": "AuthAccount",
    "properties": Object {
      "identifier": Object {
        "isNotNull": true,
        "type": "String",
      },
      "service": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "service",
      "identifier",
      "details",
      "isVerified",
    ],
  },
  "authAccounts": Object {
    "model": "AuthAccount",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "ownerId",
      "service",
      "identifier",
      "details",
      "isVerified",
    ],
  },
  "connectedAccount": Object {
    "model": "ConnectedAccount",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "service",
      "identifier",
      "details",
      "isVerified",
    ],
  },
  "connectedAccountByServiceAndIdentifier": Object {
    "model": "ConnectedAccount",
    "properties": Object {
      "identifier": Object {
        "isNotNull": true,
        "type": "String",
      },
      "service": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "service",
      "identifier",
      "details",
      "isVerified",
    ],
  },
  "connectedAccounts": Object {
    "model": "ConnectedAccount",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "ownerId",
      "service",
      "identifier",
      "details",
      "isVerified",
    ],
  },
  "cryptoAddress": Object {
    "model": "CryptoAddress",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "address",
      "isVerified",
      "isPrimary",
    ],
  },
  "cryptoAddressByAddress": Object {
    "model": "CryptoAddress",
    "properties": Object {
      "address": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "address",
      "isVerified",
      "isPrimary",
    ],
  },
  "cryptoAddresses": Object {
    "model": "CryptoAddress",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "ownerId",
      "address",
      "isVerified",
      "isPrimary",
    ],
  },
  "email": Object {
    "model": "Email",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "email",
      "isVerified",
      "isPrimary",
    ],
  },
  "emailByEmail": Object {
    "model": "Email",
    "properties": Object {
      "email": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "email",
      "isVerified",
      "isPrimary",
    ],
  },
  "emails": Object {
    "model": "Email",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "ownerId",
      "email",
      "isVerified",
      "isPrimary",
    ],
  },
  "getCurrentUser": Object {
    "model": "User",
    "properties": Object {},
    "qtype": "getOne",
    "selection": Array [
      "id",
      "username",
      "displayName",
      "profilePicture",
      "searchTsv",
      "type",
      Object {
        "model": "Group",
        "name": "groupsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "ConnectedAccount",
        "name": "connectedAccountsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "service",
          "identifier",
          "details",
          "isVerified",
          "owner",
        ],
      },
      Object {
        "model": "Email",
        "name": "emailsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "email",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "PhoneNumber",
        "name": "phoneNumbersByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "cc",
          "number",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "CryptoAddress",
        "name": "cryptoAddressesByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "address",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "AuthAccount",
        "name": "authAccountsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "service",
          "identifier",
          "details",
          "isVerified",
          "owner",
        ],
      },
      Object {
        "model": "UserContact",
        "name": "userContacts",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "vcf",
          "fullName",
          "emails",
          "device",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByRequesterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
          "requester",
          "responder",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByResponderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
          "requester",
          "responder",
        ],
      },
      Object {
        "model": "Location",
        "name": "locationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "locationType",
          "owner",
          "locationTypeByLocationType",
        ],
      },
      Object {
        "model": "UserLocation",
        "name": "userLocations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "name",
          "kind",
          "description",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "Action",
        "name": "actionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoalsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      Object {
        "model": "ActionVariation",
        "name": "actionVariationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "photo",
          "title",
          "description",
          "income",
          "gender",
          "dob",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItemsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "timeRequired",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "location",
          "locationRadius",
          "rewardWeight",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "itemTypeId",
          "ownerId",
          "actionId",
          "itemType",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerificationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItemsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerificationsByVerifierId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerificationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "Track",
        "name": "tracksByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "icon",
          "isPublished",
          "isApproved",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "objectTypeId",
          "owner",
          "objectType",
        ],
      },
      Object {
        "model": "TrackAction",
        "name": "trackActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "trackOrder",
          "isRequired",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "trackId",
          "action",
          "owner",
          "track",
        ],
      },
      Object {
        "model": "Object",
        "name": "objectsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "media",
          "location",
          "bbox",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "typeId",
          "owner",
          "type",
        ],
      },
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributesByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "receiverId",
          "sender",
          "receiver",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesByReceiverId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "receiverId",
          "sender",
          "receiver",
        ],
      },
      Object {
        "model": "Message",
        "name": "messagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "sender",
          "group",
        ],
      },
      Object {
        "model": "Post",
        "name": "postsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "poster",
        ],
      },
      Object {
        "model": "PostReaction",
        "name": "postReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostReaction",
        "name": "postReactionsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postCommentsByCommenterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postCommentsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "GroupPost",
        "name": "groupPostsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "poster",
          "group",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByCommenterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "UserDevice",
        "name": "userDevices",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "deviceId",
          "pushToken",
          "pushTokenRequested",
          "data",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "Notification",
        "name": "notificationsByActorId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actorId",
          "recipientId",
          "notificationType",
          "notificationText",
          "entityType",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actor",
          "recipient",
        ],
      },
      Object {
        "model": "Notification",
        "name": "notificationsByRecipientId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actorId",
          "recipientId",
          "notificationType",
          "notificationText",
          "entityType",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actor",
          "recipient",
        ],
      },
      Object {
        "model": "NotificationPreference",
        "name": "notificationPreferences",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "emails",
          "sms",
          "notifications",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "UserQuestion",
        "name": "userQuestionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "questionType",
          "questionPrompt",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "UserAnswer",
        "name": "userAnswers",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
      Object {
        "model": "UserAnswer",
        "name": "userAnswersByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      "searchTsvRank",
    ],
  },
  "goal": Object {
    "model": "Goal",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "slug",
      "shortName",
      "icon",
      "subHead",
      "tags",
      "search",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "GoalExplanation",
        "name": "goalExplanations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "audio",
          "audioDuration",
          "explanationTitle",
          "explanation",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "goalId",
          "goal",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      "searchRank",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
    ],
  },
  "goalByName": Object {
    "model": "Goal",
    "properties": Object {
      "name": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "slug",
      "shortName",
      "icon",
      "subHead",
      "tags",
      "search",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "GoalExplanation",
        "name": "goalExplanations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "audio",
          "audioDuration",
          "explanationTitle",
          "explanation",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "goalId",
          "goal",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      "searchRank",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
    ],
  },
  "goalBySlug": Object {
    "model": "Goal",
    "properties": Object {
      "slug": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "slug",
      "shortName",
      "icon",
      "subHead",
      "tags",
      "search",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "GoalExplanation",
        "name": "goalExplanations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "audio",
          "audioDuration",
          "explanationTitle",
          "explanation",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "goalId",
          "goal",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      "searchRank",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
    ],
  },
  "goalExplanation": Object {
    "model": "GoalExplanation",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "audio",
      "explanationTitle",
      "explanation",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "goalId",
    ],
  },
  "goalExplanations": Object {
    "model": "GoalExplanation",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "audio",
      "explanationTitle",
      "explanation",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "goalId",
    ],
  },
  "goals": Object {
    "model": "Goal",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "slug",
      "shortName",
      "icon",
      "subHead",
      "tags",
      "search",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "GoalExplanation",
        "name": "goalExplanations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "audio",
          "audioDuration",
          "explanationTitle",
          "explanation",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "goalId",
          "goal",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoals",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      "searchRank",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
    ],
  },
  "group": Object {
    "model": "Group",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "GroupPost",
        "name": "groupPosts",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "poster",
          "group",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostComments",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByActionGroupIdAndRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByActionGroupIdAndVerifyRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
    ],
  },
  "groupPost": Object {
    "model": "GroupPost",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "posterId",
      "type",
      "flagged",
      "image",
      "url",
      "data",
      "taggedUserIds",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByPostId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByPostId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
    ],
  },
  "groupPostComment": Object {
    "model": "GroupPostComment",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "commenterId",
      "parentId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
      "postId",
      "posterId",
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByParentId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
    ],
  },
  "groupPostComments": Object {
    "model": "GroupPostComment",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "commenterId",
      "parentId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
      "postId",
      "posterId",
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByParentId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
    ],
  },
  "groupPostReaction": Object {
    "model": "GroupPostReaction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "reacterId",
      "type",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
      "posterId",
      "postId",
    ],
  },
  "groupPostReactions": Object {
    "model": "GroupPostReaction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "reacterId",
      "type",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
      "posterId",
      "postId",
    ],
  },
  "groupPosts": Object {
    "model": "GroupPost",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "posterId",
      "type",
      "flagged",
      "image",
      "url",
      "data",
      "taggedUserIds",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByPostId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByPostId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
    ],
  },
  "groups": Object {
    "model": "Group",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "GroupPost",
        "name": "groupPosts",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "poster",
          "group",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostComments",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByActionGroupIdAndRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByActionGroupIdAndVerifyRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
    ],
  },
  "location": Object {
    "model": "Location",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "locationType",
    ],
  },
  "locationType": Object {
    "model": "LocationType",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "Location",
        "name": "locationsByLocationType",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "locationType",
          "owner",
          "locationTypeByLocationType",
        ],
      },
    ],
  },
  "locationTypes": Object {
    "model": "LocationType",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "Location",
        "name": "locationsByLocationType",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "locationType",
          "owner",
          "locationTypeByLocationType",
        ],
      },
    ],
  },
  "locations": Object {
    "model": "Location",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "locationType",
    ],
  },
  "message": Object {
    "model": "Message",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "senderId",
      "type",
      "content",
      "upload",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
    ],
  },
  "messageGroup": Object {
    "model": "MessageGroup",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "memberIds",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "Message",
        "name": "messagesByGroupId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "sender",
          "group",
        ],
      },
    ],
  },
  "messageGroups": Object {
    "model": "MessageGroup",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "memberIds",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "Message",
        "name": "messagesByGroupId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "sender",
          "group",
        ],
      },
    ],
  },
  "messages": Object {
    "model": "Message",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "senderId",
      "type",
      "content",
      "upload",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "groupId",
    ],
  },
  "newsArticle": Object {
    "model": "NewsArticle",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "description",
      "link",
      "publishedAt",
      "photo",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "newsArticles": Object {
    "model": "NewsArticle",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "description",
      "link",
      "publishedAt",
      "photo",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "notification": Object {
    "model": "Notification",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "actorId",
      "recipientId",
      "notificationType",
      "notificationText",
      "entityType",
      "data",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "notificationPreference": Object {
    "model": "NotificationPreference",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "emails",
      "sms",
      "notifications",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "notificationPreferences": Object {
    "model": "NotificationPreference",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "emails",
      "sms",
      "notifications",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "notifications": Object {
    "model": "Notification",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "actorId",
      "recipientId",
      "notificationType",
      "notificationText",
      "entityType",
      "data",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "object": Object {
    "model": "Object",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "description",
      "photo",
      "media",
      "data",
      "ownerId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "typeId",
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributes",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
    ],
  },
  "objectAttribute": Object {
    "model": "ObjectAttribute",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "description",
      "text",
      "numeric",
      "image",
      "data",
      "ownerId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "valueId",
      "objectId",
      "objectTypeAttributeId",
    ],
  },
  "objectAttributes": Object {
    "model": "ObjectAttribute",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "description",
      "text",
      "numeric",
      "image",
      "data",
      "ownerId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "valueId",
      "objectId",
      "objectTypeAttributeId",
    ],
  },
  "objectType": Object {
    "model": "ObjectType",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "Int",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "description",
      "photo",
      "icon",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "Track",
        "name": "tracks",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "icon",
          "isPublished",
          "isApproved",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "objectTypeId",
          "owner",
          "objectType",
        ],
      },
      Object {
        "model": "Object",
        "name": "objectsByTypeId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "media",
          "location",
          "bbox",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "typeId",
          "owner",
          "type",
        ],
      },
      Object {
        "model": "ObjectTypeAttribute",
        "name": "objectTypeAttributes",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "label",
          "type",
          "unit",
          "description",
          "min",
          "max",
          "pattern",
          "isRequired",
          "attrOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "objectTypeId",
          "objectType",
        ],
      },
    ],
  },
  "objectTypeAttribute": Object {
    "model": "ObjectTypeAttribute",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "label",
      "type",
      "unit",
      "description",
      "min",
      "max",
      "pattern",
      "isRequired",
      "attrOrder",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "objectTypeId",
      Object {
        "model": "ObjectTypeValue",
        "name": "objectTypeValuesByAttrId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "icon",
          "type",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "valueOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "attrId",
          "attr",
        ],
      },
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributes",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
    ],
  },
  "objectTypeAttributes": Object {
    "model": "ObjectTypeAttribute",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "label",
      "type",
      "unit",
      "description",
      "min",
      "max",
      "pattern",
      "isRequired",
      "attrOrder",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "objectTypeId",
      Object {
        "model": "ObjectTypeValue",
        "name": "objectTypeValuesByAttrId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "icon",
          "type",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "valueOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "attrId",
          "attr",
        ],
      },
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributes",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
    ],
  },
  "objectTypeValue": Object {
    "model": "ObjectTypeValue",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "description",
      "photo",
      "icon",
      "type",
      "text",
      "numeric",
      "image",
      "data",
      "valueOrder",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "attrId",
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributesByValueId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
    ],
  },
  "objectTypeValues": Object {
    "model": "ObjectTypeValue",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "description",
      "photo",
      "icon",
      "type",
      "text",
      "numeric",
      "image",
      "data",
      "valueOrder",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "attrId",
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributesByValueId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
    ],
  },
  "objectTypes": Object {
    "model": "ObjectType",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "description",
      "photo",
      "icon",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "Action",
        "name": "actions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "Track",
        "name": "tracks",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "icon",
          "isPublished",
          "isApproved",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "objectTypeId",
          "owner",
          "objectType",
        ],
      },
      Object {
        "model": "Object",
        "name": "objectsByTypeId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "media",
          "location",
          "bbox",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "typeId",
          "owner",
          "type",
        ],
      },
      Object {
        "model": "ObjectTypeAttribute",
        "name": "objectTypeAttributes",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "label",
          "type",
          "unit",
          "description",
          "min",
          "max",
          "pattern",
          "isRequired",
          "attrOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "objectTypeId",
          "objectType",
        ],
      },
    ],
  },
  "objects": Object {
    "model": "Object",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "description",
      "photo",
      "media",
      "data",
      "ownerId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "typeId",
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributes",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
    ],
  },
  "organizationProfile": Object {
    "model": "OrganizationProfile",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "headerImage",
      "profilePicture",
      "description",
      "website",
      "reputation",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "organizationId",
    ],
  },
  "organizationProfiles": Object {
    "model": "OrganizationProfile",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "headerImage",
      "profilePicture",
      "description",
      "website",
      "reputation",
      "tags",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "organizationId",
    ],
  },
  "phoneNumber": Object {
    "model": "PhoneNumber",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "cc",
      "number",
      "isVerified",
      "isPrimary",
    ],
  },
  "phoneNumberByNumber": Object {
    "model": "PhoneNumber",
    "properties": Object {
      "number": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "ownerId",
      "cc",
      "number",
      "isVerified",
      "isPrimary",
    ],
  },
  "phoneNumbers": Object {
    "model": "PhoneNumber",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "ownerId",
      "cc",
      "number",
      "isVerified",
      "isPrimary",
    ],
  },
  "post": Object {
    "model": "Post",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "posterId",
      "type",
      "flagged",
      "image",
      "url",
      "data",
      "taggedUserIds",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "PostReaction",
        "name": "postReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postComments",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
    ],
  },
  "postComment": Object {
    "model": "PostComment",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "commenterId",
      "parentId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "postId",
      "posterId",
      Object {
        "model": "PostComment",
        "name": "postCommentsByParentId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
    ],
  },
  "postComments": Object {
    "model": "PostComment",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "commenterId",
      "parentId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "postId",
      "posterId",
      Object {
        "model": "PostComment",
        "name": "postCommentsByParentId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
    ],
  },
  "postReaction": Object {
    "model": "PostReaction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "reacterId",
      "type",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "postId",
      "posterId",
    ],
  },
  "postReactions": Object {
    "model": "PostReaction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "reacterId",
      "type",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "postId",
      "posterId",
    ],
  },
  "posts": Object {
    "model": "Post",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "posterId",
      "type",
      "flagged",
      "image",
      "url",
      "data",
      "taggedUserIds",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      Object {
        "model": "PostReaction",
        "name": "postReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postComments",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
    ],
  },
  "requiredAction": Object {
    "model": "RequiredAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "actionOrder",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      "ownerId",
      "requiredId",
    ],
  },
  "requiredActions": Object {
    "model": "RequiredAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "actionOrder",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      "ownerId",
      "requiredId",
    ],
  },
  "rewardLimit": Object {
    "model": "RewardLimit",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "rewardAmount",
      "rewardUnit",
      "totalRewardLimit",
      "weeklyLimit",
      "dailyLimit",
      "totalLimit",
      "userTotalLimit",
      "userWeeklyLimit",
      "userDailyLimit",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      Object {
        "model": "Action",
        "name": "actionsByRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "Action",
        "name": "actionsByVerifyRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "Group",
        "name": "groupsByActionRewardIdAndGroupId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByActionRewardIdAndVerifyRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "Group",
        "name": "groupsByActionVerifyRewardIdAndGroupId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByActionVerifyRewardIdAndRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
    ],
  },
  "rewardLimits": Object {
    "model": "RewardLimit",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "rewardAmount",
      "rewardUnit",
      "totalRewardLimit",
      "weeklyLimit",
      "dailyLimit",
      "totalLimit",
      "userTotalLimit",
      "userWeeklyLimit",
      "userDailyLimit",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      Object {
        "model": "Action",
        "name": "actionsByRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "Action",
        "name": "actionsByVerifyRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "Group",
        "name": "groupsByActionRewardIdAndGroupId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByActionRewardIdAndVerifyRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "Group",
        "name": "groupsByActionVerifyRewardIdAndGroupId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByActionVerifyRewardIdAndRewardId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
    ],
  },
  "roleType": Object {
    "model": "RoleType",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "Int",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      Object {
        "model": "User",
        "name": "usersByType",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "username",
          "displayName",
          "profilePicture",
          "searchTsv",
          "type",
          "roleTypeByType",
          "userProfile",
          "userSetting",
          "userCharacteristic",
          "organizationProfileByOrganizationId",
          "searchTsvRank",
        ],
      },
    ],
  },
  "roleTypeByName": Object {
    "model": "RoleType",
    "properties": Object {
      "name": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      Object {
        "model": "User",
        "name": "usersByType",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "username",
          "displayName",
          "profilePicture",
          "searchTsv",
          "type",
          "roleTypeByType",
          "userProfile",
          "userSetting",
          "userCharacteristic",
          "organizationProfileByOrganizationId",
          "searchTsvRank",
        ],
      },
    ],
  },
  "roleTypes": Object {
    "model": "RoleType",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      Object {
        "model": "User",
        "name": "usersByType",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "username",
          "displayName",
          "profilePicture",
          "searchTsv",
          "type",
          "roleTypeByType",
          "userProfile",
          "userSetting",
          "userCharacteristic",
          "organizationProfileByOrganizationId",
          "searchTsvRank",
        ],
      },
    ],
  },
  "track": Object {
    "model": "Track",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "name",
      "description",
      "photo",
      "icon",
      "isPublished",
      "isApproved",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "objectTypeId",
      Object {
        "model": "TrackAction",
        "name": "trackActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "trackOrder",
          "isRequired",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "trackId",
          "action",
          "owner",
          "track",
        ],
      },
    ],
  },
  "trackAction": Object {
    "model": "TrackAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "trackOrder",
      "isRequired",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      "ownerId",
      "trackId",
    ],
  },
  "trackActions": Object {
    "model": "TrackAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "trackOrder",
      "isRequired",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
      "ownerId",
      "trackId",
    ],
  },
  "tracks": Object {
    "model": "Track",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "name",
      "description",
      "photo",
      "icon",
      "isPublished",
      "isApproved",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "objectTypeId",
      Object {
        "model": "TrackAction",
        "name": "trackActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "trackOrder",
          "isRequired",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "trackId",
          "action",
          "owner",
          "track",
        ],
      },
    ],
  },
  "user": Object {
    "model": "User",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "username",
      "displayName",
      "profilePicture",
      "searchTsv",
      "type",
      Object {
        "model": "Group",
        "name": "groupsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "ConnectedAccount",
        "name": "connectedAccountsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "service",
          "identifier",
          "details",
          "isVerified",
          "owner",
        ],
      },
      Object {
        "model": "Email",
        "name": "emailsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "email",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "PhoneNumber",
        "name": "phoneNumbersByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "cc",
          "number",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "CryptoAddress",
        "name": "cryptoAddressesByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "address",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "AuthAccount",
        "name": "authAccountsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "service",
          "identifier",
          "details",
          "isVerified",
          "owner",
        ],
      },
      Object {
        "model": "UserContact",
        "name": "userContacts",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "vcf",
          "fullName",
          "emails",
          "device",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByRequesterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
          "requester",
          "responder",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByResponderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
          "requester",
          "responder",
        ],
      },
      Object {
        "model": "Location",
        "name": "locationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "locationType",
          "owner",
          "locationTypeByLocationType",
        ],
      },
      Object {
        "model": "UserLocation",
        "name": "userLocations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "name",
          "kind",
          "description",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "Action",
        "name": "actionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoalsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      Object {
        "model": "ActionVariation",
        "name": "actionVariationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "photo",
          "title",
          "description",
          "income",
          "gender",
          "dob",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItemsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "timeRequired",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "location",
          "locationRadius",
          "rewardWeight",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "itemTypeId",
          "ownerId",
          "actionId",
          "itemType",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerificationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItemsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerificationsByVerifierId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerificationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "Track",
        "name": "tracksByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "icon",
          "isPublished",
          "isApproved",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "objectTypeId",
          "owner",
          "objectType",
        ],
      },
      Object {
        "model": "TrackAction",
        "name": "trackActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "trackOrder",
          "isRequired",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "trackId",
          "action",
          "owner",
          "track",
        ],
      },
      Object {
        "model": "Object",
        "name": "objectsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "media",
          "location",
          "bbox",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "typeId",
          "owner",
          "type",
        ],
      },
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributesByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "receiverId",
          "sender",
          "receiver",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesByReceiverId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "receiverId",
          "sender",
          "receiver",
        ],
      },
      Object {
        "model": "Message",
        "name": "messagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "sender",
          "group",
        ],
      },
      Object {
        "model": "Post",
        "name": "postsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "poster",
        ],
      },
      Object {
        "model": "PostReaction",
        "name": "postReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostReaction",
        "name": "postReactionsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postCommentsByCommenterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postCommentsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "GroupPost",
        "name": "groupPostsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "poster",
          "group",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByCommenterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "UserDevice",
        "name": "userDevices",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "deviceId",
          "pushToken",
          "pushTokenRequested",
          "data",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "Notification",
        "name": "notificationsByActorId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actorId",
          "recipientId",
          "notificationType",
          "notificationText",
          "entityType",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actor",
          "recipient",
        ],
      },
      Object {
        "model": "Notification",
        "name": "notificationsByRecipientId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actorId",
          "recipientId",
          "notificationType",
          "notificationText",
          "entityType",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actor",
          "recipient",
        ],
      },
      Object {
        "model": "NotificationPreference",
        "name": "notificationPreferences",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "emails",
          "sms",
          "notifications",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "UserQuestion",
        "name": "userQuestionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "questionType",
          "questionPrompt",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "UserAnswer",
        "name": "userAnswers",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
      Object {
        "model": "UserAnswer",
        "name": "userAnswersByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      "searchTsvRank",
    ],
  },
  "userAction": Object {
    "model": "UserAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "actionStarted",
      "complete",
      "verified",
      "verifiedDate",
      "userRating",
      "rejected",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "actionId",
      "objectId",
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
    ],
  },
  "userActionItem": Object {
    "model": "UserActionItem",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "text",
      "media",
      "data",
      "complete",
      "verified",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "actionId",
      "userActionId",
      "actionItemId",
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
    ],
  },
  "userActionItemVerification": Object {
    "model": "UserActionItemVerification",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "verifierId",
      "verified",
      "rejected",
      "notes",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "ownerId",
      "actionId",
      "userActionId",
      "actionItemId",
      "userActionItemId",
    ],
  },
  "userActionItemVerifications": Object {
    "model": "UserActionItemVerification",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "verifierId",
      "verified",
      "rejected",
      "notes",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "ownerId",
      "actionId",
      "userActionId",
      "actionItemId",
      "userActionItemId",
    ],
  },
  "userActionItems": Object {
    "model": "UserActionItem",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "text",
      "media",
      "data",
      "complete",
      "verified",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "actionId",
      "userActionId",
      "actionItemId",
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
    ],
  },
  "userActionReaction": Object {
    "model": "UserActionReaction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "reacterId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userActionId",
      "userId",
      "actionId",
    ],
  },
  "userActionReactions": Object {
    "model": "UserActionReaction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "reacterId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userActionId",
      "userId",
      "actionId",
    ],
  },
  "userActionVerification": Object {
    "model": "UserActionVerification",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "verifierId",
      "verified",
      "rejected",
      "notes",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "ownerId",
      "actionId",
      "userActionId",
    ],
  },
  "userActionVerifications": Object {
    "model": "UserActionVerification",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "verifierId",
      "verified",
      "rejected",
      "notes",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "userId",
      "ownerId",
      "actionId",
      "userActionId",
    ],
  },
  "userActions": Object {
    "model": "UserAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "actionStarted",
      "complete",
      "verified",
      "verifiedDate",
      "userRating",
      "rejected",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      "actionId",
      "objectId",
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
    ],
  },
  "userAnswer": Object {
    "model": "UserAnswer",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "text",
      "numeric",
      "image",
      "data",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "questionId",
      "ownerId",
    ],
  },
  "userAnswers": Object {
    "model": "UserAnswer",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "text",
      "numeric",
      "image",
      "data",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "questionId",
      "ownerId",
    ],
  },
  "userByUsername": Object {
    "model": "User",
    "properties": Object {
      "username": Object {
        "isNotNull": true,
        "type": "String",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "username",
      "displayName",
      "profilePicture",
      "searchTsv",
      "type",
      Object {
        "model": "Group",
        "name": "groupsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "ConnectedAccount",
        "name": "connectedAccountsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "service",
          "identifier",
          "details",
          "isVerified",
          "owner",
        ],
      },
      Object {
        "model": "Email",
        "name": "emailsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "email",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "PhoneNumber",
        "name": "phoneNumbersByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "cc",
          "number",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "CryptoAddress",
        "name": "cryptoAddressesByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "address",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "AuthAccount",
        "name": "authAccountsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "service",
          "identifier",
          "details",
          "isVerified",
          "owner",
        ],
      },
      Object {
        "model": "UserContact",
        "name": "userContacts",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "vcf",
          "fullName",
          "emails",
          "device",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByRequesterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
          "requester",
          "responder",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByResponderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
          "requester",
          "responder",
        ],
      },
      Object {
        "model": "Location",
        "name": "locationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "locationType",
          "owner",
          "locationTypeByLocationType",
        ],
      },
      Object {
        "model": "UserLocation",
        "name": "userLocations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "name",
          "kind",
          "description",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "Action",
        "name": "actionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoalsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      Object {
        "model": "ActionVariation",
        "name": "actionVariationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "photo",
          "title",
          "description",
          "income",
          "gender",
          "dob",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItemsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "timeRequired",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "location",
          "locationRadius",
          "rewardWeight",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "itemTypeId",
          "ownerId",
          "actionId",
          "itemType",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerificationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItemsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerificationsByVerifierId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerificationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "Track",
        "name": "tracksByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "icon",
          "isPublished",
          "isApproved",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "objectTypeId",
          "owner",
          "objectType",
        ],
      },
      Object {
        "model": "TrackAction",
        "name": "trackActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "trackOrder",
          "isRequired",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "trackId",
          "action",
          "owner",
          "track",
        ],
      },
      Object {
        "model": "Object",
        "name": "objectsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "media",
          "location",
          "bbox",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "typeId",
          "owner",
          "type",
        ],
      },
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributesByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "receiverId",
          "sender",
          "receiver",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesByReceiverId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "receiverId",
          "sender",
          "receiver",
        ],
      },
      Object {
        "model": "Message",
        "name": "messagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "sender",
          "group",
        ],
      },
      Object {
        "model": "Post",
        "name": "postsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "poster",
        ],
      },
      Object {
        "model": "PostReaction",
        "name": "postReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostReaction",
        "name": "postReactionsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postCommentsByCommenterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postCommentsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "GroupPost",
        "name": "groupPostsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "poster",
          "group",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByCommenterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "UserDevice",
        "name": "userDevices",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "deviceId",
          "pushToken",
          "pushTokenRequested",
          "data",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "Notification",
        "name": "notificationsByActorId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actorId",
          "recipientId",
          "notificationType",
          "notificationText",
          "entityType",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actor",
          "recipient",
        ],
      },
      Object {
        "model": "Notification",
        "name": "notificationsByRecipientId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actorId",
          "recipientId",
          "notificationType",
          "notificationText",
          "entityType",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actor",
          "recipient",
        ],
      },
      Object {
        "model": "NotificationPreference",
        "name": "notificationPreferences",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "emails",
          "sms",
          "notifications",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "UserQuestion",
        "name": "userQuestionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "questionType",
          "questionPrompt",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "UserAnswer",
        "name": "userAnswers",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
      Object {
        "model": "UserAnswer",
        "name": "userAnswersByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      "searchTsvRank",
    ],
  },
  "userCharacteristic": Object {
    "model": "UserCharacteristic",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "income",
      "gender",
      "race",
      "age",
      "dob",
      "education",
      "homeOwnership",
      "treeHuggerLevel",
      "diyLevel",
      "gardenerLevel",
      "freeTime",
      "researchToDoer",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userCharacteristics": Object {
    "model": "UserCharacteristic",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "income",
      "gender",
      "race",
      "age",
      "dob",
      "education",
      "homeOwnership",
      "treeHuggerLevel",
      "diyLevel",
      "gardenerLevel",
      "freeTime",
      "researchToDoer",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userConnection": Object {
    "model": "UserConnection",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "accepted",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "requesterId",
      "responderId",
    ],
  },
  "userConnections": Object {
    "model": "UserConnection",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "accepted",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "requesterId",
      "responderId",
    ],
  },
  "userContact": Object {
    "model": "UserContact",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "vcf",
      "fullName",
      "emails",
      "device",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userContacts": Object {
    "model": "UserContact",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "vcf",
      "fullName",
      "emails",
      "device",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userDevice": Object {
    "model": "UserDevice",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "type",
      "deviceId",
      "pushToken",
      "pushTokenRequested",
      "data",
      "userId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userDevices": Object {
    "model": "UserDevice",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "type",
      "deviceId",
      "pushToken",
      "pushTokenRequested",
      "data",
      "userId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userLocation": Object {
    "model": "UserLocation",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "name",
      "kind",
      "description",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userLocations": Object {
    "model": "UserLocation",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "name",
      "kind",
      "description",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userMessage": Object {
    "model": "UserMessage",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "senderId",
      "type",
      "content",
      "upload",
      "received",
      "receiverRead",
      "senderReaction",
      "receiverReaction",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "receiverId",
    ],
  },
  "userMessages": Object {
    "model": "UserMessage",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "senderId",
      "type",
      "content",
      "upload",
      "received",
      "receiverRead",
      "senderReaction",
      "receiverReaction",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "receiverId",
    ],
  },
  "userPassAction": Object {
    "model": "UserPassAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
    ],
  },
  "userPassActions": Object {
    "model": "UserPassAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
    ],
  },
  "userProfile": Object {
    "model": "UserProfile",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "profilePicture",
      "bio",
      "reputation",
      "displayName",
      "tags",
      "desired",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userProfiles": Object {
    "model": "UserProfile",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "profilePicture",
      "bio",
      "reputation",
      "displayName",
      "tags",
      "desired",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userQuestion": Object {
    "model": "UserQuestion",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "questionType",
      "questionPrompt",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      Object {
        "model": "UserAnswer",
        "name": "userAnswersByQuestionId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
    ],
  },
  "userQuestions": Object {
    "model": "UserQuestion",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "questionType",
      "questionPrompt",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "ownerId",
      Object {
        "model": "UserAnswer",
        "name": "userAnswersByQuestionId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
    ],
  },
  "userSavedAction": Object {
    "model": "UserSavedAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
    ],
  },
  "userSavedActions": Object {
    "model": "UserSavedAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
    ],
  },
  "userSetting": Object {
    "model": "UserSetting",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "firstName",
      "lastName",
      "searchRadius",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userSettings": Object {
    "model": "UserSetting",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "firstName",
      "lastName",
      "searchRadius",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "userViewedAction": Object {
    "model": "UserViewedAction",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "userId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
    ],
  },
  "userViewedActions": Object {
    "model": "UserViewedAction",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "userId",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
      "actionId",
    ],
  },
  "users": Object {
    "model": "User",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "username",
      "displayName",
      "profilePicture",
      "searchTsv",
      "type",
      Object {
        "model": "Group",
        "name": "groupsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "ConnectedAccount",
        "name": "connectedAccountsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "service",
          "identifier",
          "details",
          "isVerified",
          "owner",
        ],
      },
      Object {
        "model": "Email",
        "name": "emailsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "email",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "PhoneNumber",
        "name": "phoneNumbersByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "cc",
          "number",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "CryptoAddress",
        "name": "cryptoAddressesByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "address",
          "isVerified",
          "isPrimary",
          "owner",
        ],
      },
      Object {
        "model": "AuthAccount",
        "name": "authAccountsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "ownerId",
          "service",
          "identifier",
          "details",
          "isVerified",
          "owner",
        ],
      },
      Object {
        "model": "UserContact",
        "name": "userContacts",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "vcf",
          "fullName",
          "emails",
          "device",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByRequesterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
          "requester",
          "responder",
        ],
      },
      Object {
        "model": "UserConnection",
        "name": "userConnectionsByResponderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "accepted",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "requesterId",
          "responderId",
          "requester",
          "responder",
        ],
      },
      Object {
        "model": "Location",
        "name": "locationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "locationType",
          "owner",
          "locationTypeByLocationType",
        ],
      },
      Object {
        "model": "UserLocation",
        "name": "userLocations",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "name",
          "kind",
          "description",
          "location",
          "bbox",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "Action",
        "name": "actionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "slug",
          "photo",
          "shareImage",
          "title",
          "titleObjectTemplate",
          "url",
          "description",
          "discoveryHeader",
          "discoveryDescription",
          "notificationText",
          "notificationObjectTemplate",
          "enableNotifications",
          "enableNotificationsText",
          "search",
          "location",
          "locationRadius",
          "timeRequired",
          "startDate",
          "endDate",
          "approved",
          "published",
          "isPrivate",
          "rewardAmount",
          "activityFeedText",
          "callToAction",
          "completedActionText",
          "alreadyCompletedActionText",
          "selfVerifiable",
          "isRecurring",
          "recurringInterval",
          "oncePerObject",
          "minimumGroupMembers",
          "limitedToLocation",
          "tags",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "ownerId",
          "objectTypeId",
          "rewardId",
          "verifyRewardId",
          "group",
          "owner",
          "objectType",
          "reward",
          "verifyReward",
          "searchRank",
        ],
      },
      Object {
        "model": "ActionGoal",
        "name": "actionGoalsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "goalId",
          "owner",
          "action",
          "goal",
        ],
      },
      Object {
        "model": "ActionVariation",
        "name": "actionVariationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "photo",
          "title",
          "description",
          "income",
          "gender",
          "dob",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "ActionItem",
        "name": "actionItemsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "type",
          "itemOrder",
          "timeRequired",
          "isRequired",
          "notificationText",
          "embedCode",
          "url",
          "media",
          "location",
          "locationRadius",
          "rewardWeight",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "itemTypeId",
          "ownerId",
          "actionId",
          "itemType",
          "owner",
          "action",
        ],
      },
      Object {
        "model": "RequiredAction",
        "name": "requiredActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actionOrder",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "requiredId",
          "action",
          "owner",
          "required",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserAction",
        "name": "userActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "actionStarted",
          "complete",
          "verified",
          "verifiedDate",
          "userRating",
          "rejected",
          "location",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "objectId",
          "user",
          "owner",
          "action",
          "object",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionVerification",
        "name": "userActionVerificationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "user",
          "owner",
          "action",
          "userAction",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItems",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItem",
        "name": "userActionItemsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "text",
          "media",
          "location",
          "bbox",
          "data",
          "complete",
          "verified",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerificationsByVerifierId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerifications",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "UserActionItemVerification",
        "name": "userActionItemVerificationsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "verifierId",
          "verified",
          "rejected",
          "notes",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userId",
          "ownerId",
          "actionId",
          "userActionId",
          "actionItemId",
          "userActionItemId",
          "verifier",
          "user",
          "owner",
          "action",
          "userAction",
          "actionItem",
          "userActionItem",
        ],
      },
      Object {
        "model": "Track",
        "name": "tracksByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "icon",
          "isPublished",
          "isApproved",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "objectTypeId",
          "owner",
          "objectType",
        ],
      },
      Object {
        "model": "TrackAction",
        "name": "trackActionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "trackOrder",
          "isRequired",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "ownerId",
          "trackId",
          "action",
          "owner",
          "track",
        ],
      },
      Object {
        "model": "Object",
        "name": "objectsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "name",
          "description",
          "photo",
          "media",
          "location",
          "bbox",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "typeId",
          "owner",
          "type",
        ],
      },
      Object {
        "model": "ObjectAttribute",
        "name": "objectAttributesByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "description",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "ownerId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "valueId",
          "objectId",
          "objectTypeAttributeId",
          "owner",
          "value",
          "object",
          "objectTypeAttribute",
        ],
      },
      Object {
        "model": "UserPassAction",
        "name": "userPassActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserSavedAction",
        "name": "userSavedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserViewedAction",
        "name": "userViewedActions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actionId",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserActionReaction",
        "name": "userActionReactions",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "userActionId",
          "userId",
          "actionId",
          "reacter",
          "userAction",
          "user",
          "action",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "receiverId",
          "sender",
          "receiver",
        ],
      },
      Object {
        "model": "UserMessage",
        "name": "userMessagesByReceiverId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "received",
          "receiverRead",
          "senderReaction",
          "receiverReaction",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "receiverId",
          "sender",
          "receiver",
        ],
      },
      Object {
        "model": "Message",
        "name": "messagesBySenderId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "senderId",
          "type",
          "content",
          "upload",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "sender",
          "group",
        ],
      },
      Object {
        "model": "Post",
        "name": "postsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "poster",
        ],
      },
      Object {
        "model": "PostReaction",
        "name": "postReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostReaction",
        "name": "postReactionsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "reacter",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postCommentsByCommenterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "PostComment",
        "name": "postCommentsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "GroupPost",
        "name": "groupPostsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "posterId",
          "type",
          "flagged",
          "image",
          "url",
          "location",
          "data",
          "taggedUserIds",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "poster",
          "group",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByReacterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostReaction",
        "name": "groupPostReactionsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "reacterId",
          "type",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "posterId",
          "postId",
          "reacter",
          "group",
          "poster",
          "post",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByCommenterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "GroupPostComment",
        "name": "groupPostCommentsByPosterId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "commenterId",
          "parentId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "groupId",
          "postId",
          "posterId",
          "commenter",
          "parent",
          "group",
          "post",
          "poster",
        ],
      },
      Object {
        "model": "UserDevice",
        "name": "userDevices",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "type",
          "deviceId",
          "pushToken",
          "pushTokenRequested",
          "data",
          "userId",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "Notification",
        "name": "notificationsByActorId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actorId",
          "recipientId",
          "notificationType",
          "notificationText",
          "entityType",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actor",
          "recipient",
        ],
      },
      Object {
        "model": "Notification",
        "name": "notificationsByRecipientId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "actorId",
          "recipientId",
          "notificationType",
          "notificationText",
          "entityType",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "actor",
          "recipient",
        ],
      },
      Object {
        "model": "NotificationPreference",
        "name": "notificationPreferences",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "emails",
          "sms",
          "notifications",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "user",
        ],
      },
      Object {
        "model": "UserQuestion",
        "name": "userQuestionsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "questionType",
          "questionPrompt",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      Object {
        "model": "UserAnswer",
        "name": "userAnswers",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
      Object {
        "model": "UserAnswer",
        "name": "userAnswersByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "userId",
          "location",
          "text",
          "numeric",
          "image",
          "data",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "questionId",
          "ownerId",
          "user",
          "question",
          "owner",
        ],
      },
      Object {
        "model": "RewardLimit",
        "name": "rewardLimitsByOwnerId",
        "qtype": "getMany",
        "selection": Array [
          "id",
          "rewardAmount",
          "rewardUnit",
          "totalRewardLimit",
          "weeklyLimit",
          "dailyLimit",
          "totalLimit",
          "userTotalLimit",
          "userWeeklyLimit",
          "userDailyLimit",
          "createdBy",
          "updatedBy",
          "createdAt",
          "updatedAt",
          "ownerId",
          "owner",
        ],
      },
      "searchTsvRank",
    ],
  },
  "zipCode": Object {
    "model": "ZipCode",
    "properties": Object {
      "id": Object {
        "isNotNull": true,
        "type": "UUID",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "zipCodeByZip": Object {
    "model": "ZipCode",
    "properties": Object {
      "zip": Object {
        "isNotNull": true,
        "type": "Int",
      },
    },
    "qtype": "getOne",
    "selection": Array [
      "id",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
  "zipCodes": Object {
    "model": "ZipCode",
    "qtype": "getMany",
    "selection": Array [
      "id",
      "zip",
      "createdBy",
      "updatedBy",
      "createdAt",
      "updatedAt",
    ],
  },
}
`;
