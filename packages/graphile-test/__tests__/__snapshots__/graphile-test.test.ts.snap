// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`introspection query snapshot: introspection 1`] = `
{
  "data": {
    "__schema": {
      "directives": [
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Included when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
          ],
          "description": "Directs the executor to include this field or fragment only when the \`if\` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT",
          ],
          "name": "include",
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Skipped when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
          ],
          "description": "Directs the executor to skip this field or fragment when the \`if\` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT",
          ],
          "name": "skip",
        },
        {
          "args": [
            {
              "defaultValue": ""No longer supported"",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",
              "name": "reason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": [
            "FIELD_DEFINITION",
            "ARGUMENT_DEFINITION",
            "INPUT_FIELD_DEFINITION",
            "ENUM_VALUE",
          ],
          "name": "deprecated",
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": "The URL that specifies the behaviour of this scalar.",
              "name": "url",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
          ],
          "description": "Exposes a URL that specifies the behaviour of this scalar.",
          "locations": [
            "SCALAR",
          ],
          "name": "specifiedBy",
        },
      ],
      "mutationType": {
        "name": "Mutation",
      },
      "queryType": {
        "name": "Query",
      },
      "subscriptionType": null,
      "types": [
        {
          "description": "The root query type which gives access points into the data universe.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Exposes the root query type nested one level down. This is helpful for Relay 1
which can only query top level fields if they are in a particular form.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Query",
                  "ofType": null,
                },
              },
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first \`n\` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null,
                  },
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last \`n\` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null,
                  },
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first \`n\` values from our \`after\` cursor, an alternative to cursor
based pagination. May not be used with \`last\`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null,
                  },
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null,
                  },
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null,
                  },
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering \`User\`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null,
                      },
                    },
                  },
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserCondition",
                    "ofType": null,
                  },
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserFilter",
                    "ofType": null,
                  },
                },
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of \`User\`.",
              "isDeprecated": false,
              "name": "users",
              "type": {
                "kind": "OBJECT",
                "name": "UsersConnection",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null,
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "username",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null,
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "userByUsername",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "_meta",
              "type": {
                "kind": "OBJECT",
                "name": "Metaschema",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Query",
          "possibleTypes": null,
        },
        {
          "description": "A connection to a list of \`User\` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of \`User\` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "User",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the \`User\` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "UsersEdge",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* \`User\` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UsersConnection",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "username",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "User",
          "possibleTypes": null,
        },
        {
          "description": "The \`Int\` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Int",
          "possibleTypes": null,
        },
        {
          "description": "The \`String\` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": null,
        },
        {
          "description": "A \`User\` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The \`User\` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UsersEdge",
          "possibleTypes": null,
        },
        {
          "description": "A location in a connection that can be used for resuming pagination.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Cursor",
          "possibleTypes": null,
        },
        {
          "description": "Information about pagination in a connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating forwards, are there more items?",
              "isDeprecated": false,
              "name": "hasNextPage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating backwards, are there more items?",
              "isDeprecated": false,
              "name": "hasPreviousPage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating backwards, the cursor to continue.",
              "isDeprecated": false,
              "name": "startCursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating forwards, the cursor to continue.",
              "isDeprecated": false,
              "name": "endCursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PageInfo",
          "possibleTypes": null,
        },
        {
          "description": "The \`Boolean\` scalar type represents \`true\` or \`false\`.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": null,
        },
        {
          "description": "Methods to use when ordering \`User\`.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NATURAL",
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_ASC",
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_DESC",
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USERNAME_ASC",
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USERNAME_DESC",
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_ASC",
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_DESC",
            },
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "UsersOrderBy",
          "possibleTypes": null,
        },
        {
          "description": "A condition to be used against \`User\` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s \`id\` field.",
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s \`username\` field.",
              "name": "username",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserCondition",
          "possibleTypes": null,
        },
        {
          "description": "A filter to be used against \`User\` object types. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Filter by the object’s \`id\` field.",
              "name": "id",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Filter by the object’s \`username\` field.",
              "name": "username",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Checks for all expressions in this list.",
              "name": "and",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserFilter",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "defaultValue": null,
              "description": "Checks for any expressions in this list.",
              "name": "or",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserFilter",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "defaultValue": null,
              "description": "Negates the expression.",
              "name": "not",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserFilter",
                "ofType": null,
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserFilter",
          "possibleTypes": null,
        },
        {
          "description": "A filter to be used against Int fields. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Is null (if \`true\` is specified) or is not null (if \`false\` is specified).",
              "name": "isNull",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value.",
              "name": "equalTo",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value.",
              "name": "notEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "name": "distinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "name": "notDistinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Included in the specified list.",
              "name": "in",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "defaultValue": null,
              "description": "Not included in the specified list.",
              "name": "notIn",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "defaultValue": null,
              "description": "Less than the specified value.",
              "name": "lessThan",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Less than or equal to the specified value.",
              "name": "lessThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Greater than the specified value.",
              "name": "greaterThan",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Greater than or equal to the specified value.",
              "name": "greaterThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "IntFilter",
          "possibleTypes": null,
        },
        {
          "description": "A filter to be used against String fields. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Is null (if \`true\` is specified) or is not null (if \`false\` is specified).",
              "name": "isNull",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value.",
              "name": "equalTo",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value.",
              "name": "notEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "name": "distinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "name": "notDistinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Included in the specified list.",
              "name": "in",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "defaultValue": null,
              "description": "Not included in the specified list.",
              "name": "notIn",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "defaultValue": null,
              "description": "Less than the specified value.",
              "name": "lessThan",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Less than or equal to the specified value.",
              "name": "lessThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Greater than the specified value.",
              "name": "greaterThan",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Greater than or equal to the specified value.",
              "name": "greaterThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Contains the specified string (case-sensitive).",
              "name": "includes",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Does not contain the specified string (case-sensitive).",
              "name": "notIncludes",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Contains the specified string (case-insensitive).",
              "name": "includesInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Does not contain the specified string (case-insensitive).",
              "name": "notIncludesInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Starts with the specified string (case-sensitive).",
              "name": "startsWith",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Does not start with the specified string (case-sensitive).",
              "name": "notStartsWith",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Starts with the specified string (case-insensitive).",
              "name": "startsWithInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Does not start with the specified string (case-insensitive).",
              "name": "notStartsWithInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Ends with the specified string (case-sensitive).",
              "name": "endsWith",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Does not end with the specified string (case-sensitive).",
              "name": "notEndsWith",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Ends with the specified string (case-insensitive).",
              "name": "endsWithInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Does not end with the specified string (case-insensitive).",
              "name": "notEndsWithInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "name": "like",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "name": "notLike",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "name": "likeInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "name": "notLikeInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value (case-insensitive).",
              "name": "equalToInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value (case-insensitive).",
              "name": "notEqualToInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value, treating null like an ordinary value (case-insensitive).",
              "name": "distinctFromInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value, treating null like an ordinary value (case-insensitive).",
              "name": "notDistinctFromInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Included in the specified list (case-insensitive).",
              "name": "inInsensitive",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "defaultValue": null,
              "description": "Not included in the specified list (case-insensitive).",
              "name": "notInInsensitive",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "defaultValue": null,
              "description": "Less than the specified value (case-insensitive).",
              "name": "lessThanInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Less than or equal to the specified value (case-insensitive).",
              "name": "lessThanOrEqualToInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Greater than the specified value (case-insensitive).",
              "name": "greaterThanInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "Greater than or equal to the specified value (case-insensitive).",
              "name": "greaterThanOrEqualToInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StringFilter",
          "possibleTypes": null,
        },
        {
          "description": "The root mutation type which contains root level fields which mutate data.",
          "enumValues": null,
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateUserInput",
                      "ofType": null,
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": "Creates a single \`User\`.",
              "isDeprecated": false,
              "name": "createUser",
              "type": {
                "kind": "OBJECT",
                "name": "CreateUserPayload",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateUserInput",
                      "ofType": null,
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": "Updates a single \`User\` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateUser",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateUserPayload",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateUserByUsernameInput",
                      "ofType": null,
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": "Updates a single \`User\` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateUserByUsername",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateUserPayload",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteUserInput",
                      "ofType": null,
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": "Deletes a single \`User\` using a unique key.",
              "isDeprecated": false,
              "name": "deleteUser",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteUserPayload",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteUserByUsernameInput",
                      "ofType": null,
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": "Deletes a single \`User\` using a unique key.",
              "isDeprecated": false,
              "name": "deleteUserByUsername",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteUserPayload",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Mutation",
          "possibleTypes": null,
        },
        {
          "description": "The output of our create \`User\` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same \`clientMutationId\` that was provided in the mutation input,
unchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The \`User\` that was created by this mutation.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering \`User\`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null,
                      },
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": "An edge for our \`User\`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "userEdge",
              "type": {
                "kind": "OBJECT",
                "name": "UsersEdge",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CreateUserPayload",
          "possibleTypes": null,
        },
        {
          "description": "All input for the create \`User\` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the
payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "The \`User\` to be created by this mutation.",
              "name": "user",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserInput",
                  "ofType": null,
                },
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "CreateUserInput",
          "possibleTypes": null,
        },
        {
          "description": "An input for mutations affecting \`User\`",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "username",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserInput",
          "possibleTypes": null,
        },
        {
          "description": "The output of our update \`User\` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same \`clientMutationId\` that was provided in the mutation input,
unchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The \`User\` that was updated by this mutation.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering \`User\`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null,
                      },
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": "An edge for our \`User\`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "userEdge",
              "type": {
                "kind": "OBJECT",
                "name": "UsersEdge",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpdateUserPayload",
          "possibleTypes": null,
        },
        {
          "description": "All input for the \`updateUser\` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the
payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the \`User\` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserPatch",
                  "ofType": null,
                },
              },
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null,
                },
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateUserInput",
          "possibleTypes": null,
        },
        {
          "description": "Represents an update to a \`User\`. Fields that are set will be updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "username",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserPatch",
          "possibleTypes": null,
        },
        {
          "description": "All input for the \`updateUserByUsername\` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the
payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the \`User\` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserPatch",
                  "ofType": null,
                },
              },
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "username",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateUserByUsernameInput",
          "possibleTypes": null,
        },
        {
          "description": "The output of our delete \`User\` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same \`clientMutationId\` that was provided in the mutation input,
unchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The \`User\` that was deleted by this mutation.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deletedUserNodeId",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering \`User\`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null,
                      },
                    },
                  },
                },
              ],
              "deprecationReason": null,
              "description": "An edge for our \`User\`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "userEdge",
              "type": {
                "kind": "OBJECT",
                "name": "UsersEdge",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "DeleteUserPayload",
          "possibleTypes": null,
        },
        {
          "description": "The \`ID\` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \`"4"\`) or integer (such as \`4\`) input value will be accepted as an ID.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "ID",
          "possibleTypes": null,
        },
        {
          "description": "All input for the \`deleteUser\` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the
payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null,
                },
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteUserInput",
          "possibleTypes": null,
        },
        {
          "description": "All input for the \`deleteUserByUsername\` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the
payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "username",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteUserByUsernameInput",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "pgAlias",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "pgType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "gqlType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "subtype",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "modifier",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "typmod",
              "type": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isArray",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaType",
          "possibleTypes": null,
        },
        {
          "description": "The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "JSON",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaType",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaField",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "allRows",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "allRowsSimple",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "tableFieldName",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "tableType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "createPayloadType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "orderByType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "filterType",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inputType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "patchType",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "conditionType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "patchField",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "edge",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "edgeField",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "connection",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "typeName",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "enumType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "updatePayloadType",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deletePayloadType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deleteByPrimaryKey",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "updateByPrimaryKey",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "createField",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "createInputType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaTableInflection",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "all",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "one",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "create",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "update",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "delete",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaTableQuery",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fieldName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "leftKeyAttributes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MetaschemaField",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "rightKeyAttributes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MetaschemaField",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "junctionLeftKeyAttributes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MetaschemaField",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "junctionRightKeyAttributes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "MetaschemaField",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "junctionTable",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTable",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "rightTable",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTable",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "junctionLeftConstraint",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaForeignKeyConstraint",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "junctionRightConstraint",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaForeignKeyConstraint",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaTableManyToManyRelation",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fieldName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "referencedBy",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTable",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isUnique",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "keys",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaField",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaTableHasRelation",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fieldName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "references",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTable",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isUnique",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "keys",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaField",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaTableBelongsToRelation",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "hasOne",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTableHasRelation",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "hasMany",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTableHasRelation",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "has",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTableHasRelation",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "belongsTo",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTableBelongsToRelation",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "manyToMany",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTableManyToManyRelation",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaTableRelation",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTableQuery",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inflection",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTableInflection",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "relations",
              "type": {
                "kind": "OBJECT",
                "name": "MetaschemaTableRelation",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaField",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "constraints",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "MetaschemaConstraint",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "foreignKeyConstraints",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaForeignKeyConstraint",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "primaryKeyConstraints",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaPrimaryKeyConstraint",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "uniqueConstraints",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaUniqueConstraint",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "checkConstraints",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaCheckConstraint",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "exclusionConstraints",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaExclusionConstraint",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaTable",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "UNION",
          "name": "MetaschemaConstraint",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "MetaschemaForeignKeyConstraint",
              "ofType": null,
            },
            {
              "kind": "OBJECT",
              "name": "MetaschemaUniqueConstraint",
              "ofType": null,
            },
            {
              "kind": "OBJECT",
              "name": "MetaschemaPrimaryKeyConstraint",
              "ofType": null,
            },
            {
              "kind": "OBJECT",
              "name": "MetaschemaCheckConstraint",
              "ofType": null,
            },
            {
              "kind": "OBJECT",
              "name": "MetaschemaExclusionConstraint",
              "ofType": null,
            },
          ],
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaField",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "refTable",
              "type": {
                "kind": "OBJECT",
                "name": "MetaschemaTable",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "refFields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaField",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaForeignKeyConstraint",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaField",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaUniqueConstraint",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaField",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaPrimaryKeyConstraint",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaField",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaCheckConstraint",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaField",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MetaschemaExclusionConstraint",
          "possibleTypes": null,
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "tables",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MetaschemaTable",
                  "ofType": null,
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Metaschema",
          "possibleTypes": null,
        },
        {
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of all types supported by this server.",
              "isDeprecated": false,
              "name": "types",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The type that query operations will be rooted at.",
              "isDeprecated": false,
              "name": "queryType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "isDeprecated": false,
              "name": "mutationType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "isDeprecated": false,
              "name": "subscriptionType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of all directives supported by this server.",
              "isDeprecated": false,
              "name": "directives",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null,
                    },
                  },
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Schema",
          "possibleTypes": null,
        },
        {
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the \`__TypeKind\` enum.

Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional \`specifiedByUrl\`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "kind",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "specifiedByUrl",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null,
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "interfaces",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "possibleTypes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null,
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "enumValues",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null,
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inputFields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null,
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ofType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Type",
          "possibleTypes": null,
        },
        {
          "description": "An enum describing what kind of type a given \`__Type\` is.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "name": "SCALAR",
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an object. \`fields\` and \`interfaces\` are valid fields.",
              "isDeprecated": false,
              "name": "OBJECT",
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an interface. \`fields\`, \`interfaces\`, and \`possibleTypes\` are valid fields.",
              "isDeprecated": false,
              "name": "INTERFACE",
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a union. \`possibleTypes\` is a valid field.",
              "isDeprecated": false,
              "name": "UNION",
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an enum. \`enumValues\` is a valid field.",
              "isDeprecated": false,
              "name": "ENUM",
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an input object. \`inputFields\` is a valid field.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT",
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a list. \`ofType\` is a valid field.",
              "isDeprecated": false,
              "name": "LIST",
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a non-null. \`ofType\` is a valid field.",
              "isDeprecated": false,
              "name": "NON_NULL",
            },
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__TypeKind",
          "possibleTypes": null,
        },
        {
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null,
                  },
                },
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Field",
          "possibleTypes": null,
        },
        {
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "isDeprecated": false,
              "name": "defaultValue",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__InputValue",
          "possibleTypes": null,
        },
        {
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__EnumValue",
          "possibleTypes": null,
        },
        {
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null,
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isRepeatable",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null,
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "locations",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null,
                    },
                  },
                },
              },
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null,
                    },
                  },
                },
              },
            },
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Directive",
          "possibleTypes": null,
        },
        {
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "name": "QUERY",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "name": "MUTATION",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "name": "SUBSCRIPTION",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "name": "FIELD",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "name": "FRAGMENT_DEFINITION",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "name": "FRAGMENT_SPREAD",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "name": "INLINE_FRAGMENT",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a variable definition.",
              "isDeprecated": false,
              "name": "VARIABLE_DEFINITION",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "name": "SCHEMA",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "name": "SCALAR",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "name": "OBJECT",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "name": "FIELD_DEFINITION",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "name": "ARGUMENT_DEFINITION",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "name": "INTERFACE",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "name": "UNION",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "name": "ENUM",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "name": "ENUM_VALUE",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT",
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "name": "INPUT_FIELD_DEFINITION",
            },
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "possibleTypes": null,
        },
      ],
    },
  },
}
`;
